// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  /// @TypeGraphQL.omit(output: true, input: true)
  id         Int        @id @default(autoincrement())
  /// @TypeGraphQL.omit(input: true)
  uid        String     @unique @default(cuid())
  email      String     @unique
  firstName  String
  lastName   String
  phone      String
  usersRoles UserRole[]
  /// @TypeGraphQL.omit(output: true)
  password   String
  /// @TypeGraphQL.omit(input: true)
  createdAt  DateTime   @default(now())
  /// @TypeGraphQL.omit(input: true)
  updatedAt  DateTime   @updatedAt
}

model Translation {
  key       String
  value     String
  language  String
  /// @TypeGraphQL.omit(input: true)
  createdAt DateTime @default(now())
  /// @TypeGraphQL.omit(input: true)
  updatedAt DateTime @updatedAt

  @@unique([key, language])
  @@index([key, language])
}

model Role {
  /// @TypeGraphQL.omit(output: true, input: true)
  id         Int        @id @default(autoincrement())
  name       String     @unique
  /// @TypeGraphQL.omit(input: true)
  createdAt  DateTime   @default(now())
  /// @TypeGraphQL.omit(input: true)
  updatedAt  DateTime   @updatedAt
  usersRoles UserRole[]
}

model UserRole {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
  @@index([roleId])
}

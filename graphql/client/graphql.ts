/* eslint-disable */
/**
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * DO NOT EDIT THIS FILE MANUALLY!
 *
 * This file is automatically generated
 * by running `yarn graphql:schema:gen`
 *
 * Any edits done to this file will be
 * overwritten on subsequent runs!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format. */
  DateTimeISO: { input: string | Date; output: string | Date; }
  /** The `Upload` scalar type represents a file upload. */
  Upload: { input: unknown; output: unknown; }
};

export type ApplicationCocktail = {
  createdAt: Scalars['DateTimeISO']['output'];
  name: Scalars['String']['output'];
  type: ApplicationCocktailType;
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type ApplicationCocktailNullableRelationFilter = {
  is?: InputMaybe<ApplicationCocktailWhereInput>;
  isNot?: InputMaybe<ApplicationCocktailWhereInput>;
};

export type ApplicationCocktailOrderByWithRelationInput = {
  name?: InputMaybe<SortOrder>;
};

export type ApplicationCocktailType = {
  forSeason?: Maybe<Season>;
  type: Scalars['String']['output'];
};

export type ApplicationCocktailTypeForSeasonIdTypeCompoundUniqueInput = {
  forSeasonId: Scalars['Int']['input'];
  type: Scalars['String']['input'];
};

export type ApplicationCocktailTypeListRelationFilter = {
  every?: InputMaybe<ApplicationCocktailTypeWhereInput>;
  none?: InputMaybe<ApplicationCocktailTypeWhereInput>;
  some?: InputMaybe<ApplicationCocktailTypeWhereInput>;
};

export type ApplicationCocktailTypeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ApplicationCocktailTypeOrderByWithRelationInput = {
  forSeason?: InputMaybe<SeasonOrderByWithRelationInput>;
  type?: InputMaybe<SortOrder>;
};

export enum ApplicationCocktailTypeScalarFieldEnum {
  ForSeasonId = 'forSeasonId',
  Id = 'id',
  Type = 'type'
}

export type ApplicationCocktailTypeWhereInput = {
  AND?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  OR?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  type?: InputMaybe<StringFilter>;
};

export type ApplicationCocktailTypeWhereUniqueInput = {
  AND?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  OR?: InputMaybe<Array<ApplicationCocktailTypeWhereInput>>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  forSeasonId_type?: InputMaybe<ApplicationCocktailTypeForSeasonIdTypeCompoundUniqueInput>;
  type?: InputMaybe<StringFilter>;
};

export type ApplicationCocktailWhereInput = {
  AND?: InputMaybe<Array<ApplicationCocktailWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationCocktailWhereInput>>;
  OR?: InputMaybe<Array<ApplicationCocktailWhereInput>>;
  name?: InputMaybe<StringFilter>;
};

export type ApplicationInternship = {
  company?: Maybe<Company>;
  competencies: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  description: Scalars['String']['output'];
  duration: Scalars['String']['output'];
  position: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
  url: Scalars['String']['output'];
  workingPeriodEnd: Scalars['DateTimeISO']['output'];
  workingPeriodStart: Scalars['DateTimeISO']['output'];
};

export type ApplicationInternshipNullableRelationFilter = {
  is?: InputMaybe<ApplicationInternshipWhereInput>;
  isNot?: InputMaybe<ApplicationInternshipWhereInput>;
};

export type ApplicationInternshipOrderByWithRelationInput = {
  competencies?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  workingPeriodEnd?: InputMaybe<SortOrder>;
  workingPeriodStart?: InputMaybe<SortOrder>;
};

export enum ApplicationInternshipScalarFieldEnum {
  Competencies = 'competencies',
  CreatedAt = 'createdAt',
  Description = 'description',
  Duration = 'duration',
  ForApplicationId = 'forApplicationId',
  Id = 'id',
  Position = 'position',
  Uid = 'uid',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  WorkingPeriodEnd = 'workingPeriodEnd',
  WorkingPeriodStart = 'workingPeriodStart'
}

export type ApplicationInternshipWhereInput = {
  AND?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  OR?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  competencies?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  duration?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  workingPeriodEnd?: InputMaybe<DateTimeFilter>;
  workingPeriodStart?: InputMaybe<DateTimeFilter>;
};

export type ApplicationInternshipWhereUniqueInput = {
  AND?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  OR?: InputMaybe<Array<ApplicationInternshipWhereInput>>;
  competencies?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  duration?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringFilter>;
  workingPeriodEnd?: InputMaybe<DateTimeFilter>;
  workingPeriodStart?: InputMaybe<DateTimeFilter>;
};

export type ApplicationPresenter = {
  _count?: Maybe<ApplicationPresenterCount>;
  bioEn: Scalars['String']['output'];
  bioHr: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  firstName: Scalars['String']['output'];
  lastName: Scalars['String']['output'];
  photo?: Maybe<Image>;
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type ApplicationPresenterCount = {
  forPanels: Scalars['Int']['output'];
  forTalks: Scalars['Int']['output'];
  forWorkshops: Scalars['Int']['output'];
};


export type ApplicationPresenterCountForPanelsArgs = {
  where?: InputMaybe<CompanyApplicationWhereInput>;
};


export type ApplicationPresenterCountForTalksArgs = {
  where?: InputMaybe<ApplicationTalkWhereInput>;
};


export type ApplicationPresenterCountForWorkshopsArgs = {
  where?: InputMaybe<ApplicationWorkshopWhereInput>;
};

export type ApplicationPresenterListRelationFilter = {
  every?: InputMaybe<ApplicationPresenterWhereInput>;
  none?: InputMaybe<ApplicationPresenterWhereInput>;
  some?: InputMaybe<ApplicationPresenterWhereInput>;
};

export type ApplicationPresenterOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ApplicationPresenterWhereInput = {
  AND?: InputMaybe<Array<ApplicationPresenterWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationPresenterWhereInput>>;
  OR?: InputMaybe<Array<ApplicationPresenterWhereInput>>;
  bioEn?: InputMaybe<StringFilter>;
  bioHr?: InputMaybe<StringFilter>;
  firstName?: InputMaybe<StringFilter>;
  lastName?: InputMaybe<StringFilter>;
  photo?: InputMaybe<ImageNullableRelationFilter>;
};

export type ApplicationTalk = {
  _count?: Maybe<ApplicationTalkCount>;
  category: ApplicationTalkCategory;
  createdAt: Scalars['DateTimeISO']['output'];
  descriptionEn: Scalars['String']['output'];
  descriptionHr: Scalars['String']['output'];
  event?: Maybe<CalendarItem>;
  language: Scalars['String']['output'];
  presenters: Array<ApplicationPresenter>;
  reservation: Scalars['Float']['output'];
  titleEn: Scalars['String']['output'];
  titleHr: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type ApplicationTalkCategory = {
  _count?: Maybe<ApplicationTalkCategoryCount>;
  forSeason?: Maybe<Season>;
  name: Scalars['String']['output'];
};

export type ApplicationTalkCategoryCount = {
  talks: Scalars['Int']['output'];
};


export type ApplicationTalkCategoryCountTalksArgs = {
  where?: InputMaybe<ApplicationTalkWhereInput>;
};

export type ApplicationTalkCategoryForSeasonIdNameCompoundUniqueInput = {
  forSeasonId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type ApplicationTalkCategoryOrderByWithRelationInput = {
  forSeason?: InputMaybe<SeasonOrderByWithRelationInput>;
  name?: InputMaybe<SortOrder>;
};

export type ApplicationTalkCategoryRelationFilter = {
  is?: InputMaybe<ApplicationTalkCategoryWhereInput>;
  isNot?: InputMaybe<ApplicationTalkCategoryWhereInput>;
};

export enum ApplicationTalkCategoryScalarFieldEnum {
  ForSeasonId = 'forSeasonId',
  Id = 'id',
  Name = 'name'
}

export type ApplicationTalkCategoryWhereInput = {
  AND?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  OR?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  name?: InputMaybe<StringFilter>;
};

export type ApplicationTalkCategoryWhereUniqueInput = {
  AND?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  OR?: InputMaybe<Array<ApplicationTalkCategoryWhereInput>>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  forSeasonId_name?: InputMaybe<ApplicationTalkCategoryForSeasonIdNameCompoundUniqueInput>;
  name?: InputMaybe<StringFilter>;
};

export type ApplicationTalkCount = {
  presenters: Scalars['Int']['output'];
};


export type ApplicationTalkCountPresentersArgs = {
  where?: InputMaybe<ApplicationPresenterWhereInput>;
};

export type ApplicationTalkNullableRelationFilter = {
  is?: InputMaybe<ApplicationTalkWhereInput>;
  isNot?: InputMaybe<ApplicationTalkWhereInput>;
};

export type ApplicationTalkOrderByWithRelationInput = {
  category?: InputMaybe<ApplicationTalkCategoryOrderByWithRelationInput>;
  descriptionEn?: InputMaybe<SortOrder>;
  descriptionHr?: InputMaybe<SortOrder>;
  event?: InputMaybe<CalendarItemOrderByWithRelationInput>;
  language?: InputMaybe<SortOrder>;
  titleEn?: InputMaybe<SortOrder>;
  titleHr?: InputMaybe<SortOrder>;
};

export type ApplicationTalkWhereInput = {
  AND?: InputMaybe<Array<ApplicationTalkWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationTalkWhereInput>>;
  OR?: InputMaybe<Array<ApplicationTalkWhereInput>>;
  category?: InputMaybe<ApplicationTalkCategoryRelationFilter>;
  descriptionEn?: InputMaybe<StringFilter>;
  descriptionHr?: InputMaybe<StringFilter>;
  event?: InputMaybe<CalendarItemNullableRelationFilter>;
  language?: InputMaybe<StringFilter>;
  titleEn?: InputMaybe<StringFilter>;
  titleHr?: InputMaybe<StringFilter>;
};

export type ApplicationWorkshop = {
  _count?: Maybe<ApplicationWorkshopCount>;
  createdAt: Scalars['DateTimeISO']['output'];
  descriptionEn: Scalars['String']['output'];
  descriptionHr: Scalars['String']['output'];
  event?: Maybe<CalendarItem>;
  goal: Scalars['String']['output'];
  language: Scalars['String']['output'];
  notesEn: Scalars['String']['output'];
  notesHr: Scalars['String']['output'];
  presenters: Array<ApplicationPresenter>;
  reservation: Scalars['Float']['output'];
  titleEn: Scalars['String']['output'];
  titleHr: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type ApplicationWorkshopCount = {
  presenters: Scalars['Int']['output'];
};


export type ApplicationWorkshopCountPresentersArgs = {
  where?: InputMaybe<ApplicationPresenterWhereInput>;
};

export type ApplicationWorkshopNullableRelationFilter = {
  is?: InputMaybe<ApplicationWorkshopWhereInput>;
  isNot?: InputMaybe<ApplicationWorkshopWhereInput>;
};

export type ApplicationWorkshopOrderByWithRelationInput = {
  descriptionEn?: InputMaybe<SortOrder>;
  descriptionHr?: InputMaybe<SortOrder>;
  event?: InputMaybe<CalendarItemOrderByWithRelationInput>;
  goal?: InputMaybe<SortOrder>;
  language?: InputMaybe<SortOrder>;
  notesEn?: InputMaybe<SortOrder>;
  notesHr?: InputMaybe<SortOrder>;
  titleEn?: InputMaybe<SortOrder>;
  titleHr?: InputMaybe<SortOrder>;
};

export type ApplicationWorkshopWhereInput = {
  AND?: InputMaybe<Array<ApplicationWorkshopWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationWorkshopWhereInput>>;
  OR?: InputMaybe<Array<ApplicationWorkshopWhereInput>>;
  descriptionEn?: InputMaybe<StringFilter>;
  descriptionHr?: InputMaybe<StringFilter>;
  event?: InputMaybe<CalendarItemNullableRelationFilter>;
  goal?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  notesEn?: InputMaybe<StringFilter>;
  notesHr?: InputMaybe<StringFilter>;
  titleEn?: InputMaybe<StringFilter>;
  titleHr?: InputMaybe<StringFilter>;
};

export type ApproveCompanyApplicationsInput = {
  parts: ApproveCompanyApplicationsInputParts;
  uid: Scalars['String']['input'];
};

export type ApproveCompanyApplicationsInputParts = {
  booth: Scalars['Boolean']['input'];
  cocktail: Scalars['Boolean']['input'];
  logoHidden: Scalars['Boolean']['input'];
  panel: Scalars['Boolean']['input'];
  talkParticipants: Scalars['Float']['input'];
  workshopParticipants: Scalars['Float']['input'];
};

export type AuthResponse = {
  entity?: Maybe<User>;
  errors?: Maybe<Array<FieldError>>;
};

export type BoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type Booth = {
  key?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type CalendarEvent = {
  class: Scalars['String']['output'];
  end: Scalars['DateTimeISO']['output'];
  location: Scalars['String']['output'];
  noGroup: Scalars['Boolean']['output'];
  start: Scalars['DateTimeISO']['output'];
  text: Scalars['String']['output'];
  title: Scalars['String']['output'];
};

export type CalendarFilterInput = {
  type?: InputMaybe<Scalars['String']['input']>;
};

export type CalendarItem = {
  capacity: Scalars['Int']['output'];
  companies?: Maybe<Array<Company>>;
  end: Scalars['DateTimeISO']['output'];
  forPanel?: Maybe<CompanyPanel>;
  forTalk?: Maybe<ApplicationTalk>;
  forWorkshop?: Maybe<ApplicationWorkshop>;
  grouped: Scalars['Boolean']['output'];
  hasEvent: Scalars['Boolean']['output'];
  location?: Maybe<Scalars['String']['output']>;
  start: Scalars['DateTimeISO']['output'];
  text?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  uid: Scalars['String']['output'];
};

export type CalendarItemListRelationFilter = {
  every?: InputMaybe<CalendarItemWhereInput>;
  none?: InputMaybe<CalendarItemWhereInput>;
  some?: InputMaybe<CalendarItemWhereInput>;
};

export type CalendarItemNullableRelationFilter = {
  is?: InputMaybe<CalendarItemWhereInput>;
  isNot?: InputMaybe<CalendarItemWhereInput>;
};

export type CalendarItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CalendarItemOrderByWithRelationInput = {
  end?: InputMaybe<SortOrder>;
  forSeason?: InputMaybe<SeasonOrderByWithRelationInput>;
  grouped?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrderInput>;
  start?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrderInput>;
  title?: InputMaybe<SortOrderInput>;
  type?: InputMaybe<SortOrderInput>;
};

export type CalendarItemWhereInput = {
  AND?: InputMaybe<Array<CalendarItemWhereInput>>;
  NOT?: InputMaybe<Array<CalendarItemWhereInput>>;
  OR?: InputMaybe<Array<CalendarItemWhereInput>>;
  end?: InputMaybe<DateTimeFilter>;
  forSeason?: InputMaybe<SeasonRelationFilter>;
  grouped?: InputMaybe<BoolFilter>;
  location?: InputMaybe<StringNullableFilter>;
  start?: InputMaybe<DateTimeFilter>;
  text?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
};

export type CalendarUpdateInput = {
  end: Scalars['DateTimeISO']['input'];
  forUid?: InputMaybe<Scalars['String']['input']>;
  grouped?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  season: Scalars['String']['input'];
  start: Scalars['DateTimeISO']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  uid?: InputMaybe<Scalars['String']['input']>;
};

export type CocktailChooseInput = {
  name: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type Company = {
  _count?: Maybe<CompanyCount>;
  address: Scalars['String']['output'];
  brandName: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  descriptionEn: Scalars['String']['output'];
  descriptionHr: Scalars['String']['output'];
  facebook?: Maybe<Scalars['String']['output']>;
  industry?: Maybe<Industry>;
  instagram?: Maybe<Scalars['String']['output']>;
  legalName: Scalars['String']['output'];
  linkedIn?: Maybe<Scalars['String']['output']>;
  logoHidden: Scalars['Boolean']['output'];
  members?: Maybe<Array<User>>;
  program?: Maybe<CompanyProgram>;
  rasterLogo?: Maybe<Image>;
  ratings: Array<UserCompanyComponentRatingComponentAverage>;
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
  vat: Scalars['String']['output'];
  vectorLogo?: Maybe<File>;
  website: Scalars['String']['output'];
};

export type CompanyApplication = {
  _count?: Maybe<CompanyApplicationCount>;
  approval?: Maybe<CompanyApplicationApproval>;
  booth?: Maybe<Scalars['String']['output']>;
  cocktail?: Maybe<ApplicationCocktail>;
  contactPerson?: Maybe<CompanyApplicationContactPerson>;
  createdAt: Scalars['DateTimeISO']['output'];
  feedback?: Maybe<CompanyApplicationFeedback>;
  forCompany?: Maybe<Company>;
  forSeason?: Maybe<Season>;
  internship?: Maybe<ApplicationInternship>;
  panelParticipants: Array<ApplicationPresenter>;
  talk?: Maybe<ApplicationTalk>;
  updatedAt: Scalars['DateTimeISO']['output'];
  userApplications: EventUserApplications;
  wantsCocktail: Scalars['Boolean']['output'];
  wantsPanel: Scalars['Boolean']['output'];
  workshop?: Maybe<ApplicationWorkshop>;
};

export type CompanyApplicationApproval = {
  booth: Scalars['Boolean']['output'];
  cocktail: Scalars['Boolean']['output'];
  forApplication: CompanyApplication;
  logoHidden: Scalars['Boolean']['output'];
  panel: Scalars['Boolean']['output'];
  talkParticipants: Scalars['Int']['output'];
  workshopParticipants: Scalars['Int']['output'];
};

export type CompanyApplicationApprovedEditInput = {
  cocktail?: InputMaybe<CocktailChooseInput>;
  internship?: InputMaybe<InternshipCreateInput>;
  panel: Array<PresenterCreateInput>;
  talk?: InputMaybe<TalksCreateInput>;
  vat: Scalars['String']['input'];
  workshop?: InputMaybe<WorkshopsCreateInput>;
};

export type CompanyApplicationContactPerson = {
  email: Scalars['String']['output'];
  name: Scalars['String']['output'];
  phone: Scalars['String']['output'];
};

export type CompanyApplicationContactPersonCreateInput = {
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

export type CompanyApplicationContactPersonNullableRelationFilter = {
  is?: InputMaybe<CompanyApplicationContactPersonWhereInput>;
  isNot?: InputMaybe<CompanyApplicationContactPersonWhereInput>;
};

export type CompanyApplicationContactPersonOrderByWithRelationInput = {
  email?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
};

export type CompanyApplicationContactPersonWhereInput = {
  AND?: InputMaybe<Array<CompanyApplicationContactPersonWhereInput>>;
  NOT?: InputMaybe<Array<CompanyApplicationContactPersonWhereInput>>;
  OR?: InputMaybe<Array<CompanyApplicationContactPersonWhereInput>>;
  email?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringFilter>;
};

export type CompanyApplicationCount = {
  panelParticipants: Scalars['Int']['output'];
};


export type CompanyApplicationCountPanelParticipantsArgs = {
  where?: InputMaybe<ApplicationPresenterWhereInput>;
};

export type CompanyApplicationCreateInput = {
  booth?: InputMaybe<Scalars['String']['input']>;
  contactPerson: CompanyApplicationContactPersonCreateInput;
  talk?: InputMaybe<TalkCreateInput>;
  vat: Scalars['String']['input'];
  wantsCocktail: Scalars['Boolean']['input'];
  wantsPanel: Scalars['Boolean']['input'];
  workshop?: InputMaybe<WorkshopCreateInput>;
};

export type CompanyApplicationFeedback = {
  applicationComments: Scalars['String']['output'];
  applicationRating: Scalars['Int']['output'];
  attendanceRating: Scalars['Int']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  dateComments: Scalars['String']['output'];
  dateRating: Scalars['Int']['output'];
  experienceComments: Scalars['String']['output'];
  foodRating: Scalars['Int']['output'];
  mostLiked: Scalars['Int']['output'];
  onsiteRating: Scalars['Int']['output'];
  overallComment: Scalars['String']['output'];
  overallRating: Scalars['Int']['output'];
  recommended: Scalars['Int']['output'];
  testimonial: Scalars['String']['output'];
  timeRating: Scalars['Int']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type CompanyApplicationFeedbackCreateInput = {
  applicationComments?: InputMaybe<Scalars['String']['input']>;
  applicationRating: Scalars['Int']['input'];
  attendanceRating: Scalars['Int']['input'];
  dateComments?: InputMaybe<Scalars['String']['input']>;
  dateRating: Scalars['Int']['input'];
  experienceComments?: InputMaybe<Scalars['String']['input']>;
  foodRating: Scalars['Int']['input'];
  mostLiked: Scalars['Int']['input'];
  onsiteRating: Scalars['Int']['input'];
  overallComment?: InputMaybe<Scalars['String']['input']>;
  overallRating: Scalars['Int']['input'];
  recommended: Scalars['Int']['input'];
  testimonial?: InputMaybe<Scalars['String']['input']>;
  timeRating: Scalars['Int']['input'];
};

export type CompanyApplicationForCompanyIdForSeasonIdCompoundUniqueInput = {
  forCompanyId: Scalars['Int']['input'];
  forSeasonId: Scalars['Int']['input'];
};

export type CompanyApplicationListRelationFilter = {
  every?: InputMaybe<CompanyApplicationWhereInput>;
  none?: InputMaybe<CompanyApplicationWhereInput>;
  some?: InputMaybe<CompanyApplicationWhereInput>;
};

export type CompanyApplicationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CompanyApplicationOrderByWithRelationInput = {
  booth?: InputMaybe<SortOrderInput>;
  cocktail?: InputMaybe<ApplicationCocktailOrderByWithRelationInput>;
  contactPerson?: InputMaybe<CompanyApplicationContactPersonOrderByWithRelationInput>;
  forCompany?: InputMaybe<CompanyOrderByWithRelationInput>;
  forSeason?: InputMaybe<SeasonOrderByWithRelationInput>;
  internship?: InputMaybe<ApplicationInternshipOrderByWithRelationInput>;
  panel?: InputMaybe<CompanyPanelOrderByWithRelationInput>;
  panelParticipants?: InputMaybe<ApplicationPresenterOrderByRelationAggregateInput>;
  talk?: InputMaybe<ApplicationTalkOrderByWithRelationInput>;
  wantsCocktail?: InputMaybe<SortOrder>;
  wantsPanel?: InputMaybe<SortOrder>;
  workshop?: InputMaybe<ApplicationWorkshopOrderByWithRelationInput>;
};

export enum CompanyApplicationScalarFieldEnum {
  Booth = 'booth',
  ContactPersonId = 'contactPersonId',
  CreatedAt = 'createdAt',
  FeedbackFormId = 'feedbackFormId',
  ForCompanyId = 'forCompanyId',
  ForSeasonId = 'forSeasonId',
  Id = 'id',
  PanelId = 'panelId',
  UpdatedAt = 'updatedAt',
  WantsCocktail = 'wantsCocktail',
  WantsPanel = 'wantsPanel'
}

export type CompanyApplicationWhereInput = {
  AND?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  NOT?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  OR?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  booth?: InputMaybe<StringNullableFilter>;
  cocktail?: InputMaybe<ApplicationCocktailNullableRelationFilter>;
  contactPerson?: InputMaybe<CompanyApplicationContactPersonNullableRelationFilter>;
  forCompany?: InputMaybe<CompanyRelationFilter>;
  forSeason?: InputMaybe<SeasonRelationFilter>;
  internship?: InputMaybe<ApplicationInternshipNullableRelationFilter>;
  panel?: InputMaybe<CompanyPanelNullableRelationFilter>;
  panelParticipants?: InputMaybe<ApplicationPresenterListRelationFilter>;
  talk?: InputMaybe<ApplicationTalkNullableRelationFilter>;
  wantsCocktail?: InputMaybe<BoolFilter>;
  wantsPanel?: InputMaybe<BoolFilter>;
  workshop?: InputMaybe<ApplicationWorkshopNullableRelationFilter>;
};

export type CompanyApplicationWhereUniqueInput = {
  AND?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  NOT?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  OR?: InputMaybe<Array<CompanyApplicationWhereInput>>;
  booth?: InputMaybe<StringNullableFilter>;
  cocktail?: InputMaybe<ApplicationCocktailNullableRelationFilter>;
  contactPerson?: InputMaybe<CompanyApplicationContactPersonNullableRelationFilter>;
  forCompany?: InputMaybe<CompanyRelationFilter>;
  forCompanyId_forSeasonId?: InputMaybe<CompanyApplicationForCompanyIdForSeasonIdCompoundUniqueInput>;
  forSeason?: InputMaybe<SeasonRelationFilter>;
  internship?: InputMaybe<ApplicationInternshipNullableRelationFilter>;
  panel?: InputMaybe<CompanyPanelNullableRelationFilter>;
  panelParticipants?: InputMaybe<ApplicationPresenterListRelationFilter>;
  talk?: InputMaybe<ApplicationTalkNullableRelationFilter>;
  wantsCocktail?: InputMaybe<BoolFilter>;
  wantsPanel?: InputMaybe<BoolFilter>;
  workshop?: InputMaybe<ApplicationWorkshopNullableRelationFilter>;
};

export type CompanyCount = {
  UserCompanyComponentRatingAveragesView: Scalars['Int']['output'];
  UserCompanyComponentRatings: Scalars['Int']['output'];
  applications: Scalars['Int']['output'];
  favouriteResumes: Scalars['Int']['output'];
  members: Scalars['Int']['output'];
  scannedResumes: Scalars['Int']['output'];
  scannedUsers: Scalars['Int']['output'];
};


export type CompanyCountUserCompanyComponentRatingAveragesViewArgs = {
  where?: InputMaybe<UserCompanyComponentRatingAveragesViewWhereInput>;
};


export type CompanyCountUserCompanyComponentRatingsArgs = {
  where?: InputMaybe<UserCompanyComponentRatingWhereInput>;
};


export type CompanyCountApplicationsArgs = {
  where?: InputMaybe<CompanyApplicationWhereInput>;
};


export type CompanyCountFavouriteResumesArgs = {
  where?: InputMaybe<FavouriteResumeWhereInput>;
};


export type CompanyCountMembersArgs = {
  where?: InputMaybe<UserWhereInput>;
};


export type CompanyCountScannedResumesArgs = {
  where?: InputMaybe<ScannedResumeWhereInput>;
};


export type CompanyCountScannedUsersArgs = {
  where?: InputMaybe<CompanyScannedUserWhereInput>;
};

export type CompanyOrderByWithRelationInput = {
  address?: InputMaybe<SortOrder>;
  brandName?: InputMaybe<SortOrder>;
  descriptionEn?: InputMaybe<SortOrder>;
  descriptionHr?: InputMaybe<SortOrder>;
  facebook?: InputMaybe<SortOrderInput>;
  instagram?: InputMaybe<SortOrderInput>;
  legalName?: InputMaybe<SortOrder>;
  linkedIn?: InputMaybe<SortOrderInput>;
  vat?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type CompanyPanel = {
  _count?: Maybe<CompanyPanelCount>;
  companies: Array<Company>;
  description: Scalars['String']['output'];
  event?: Maybe<CalendarItem>;
  name: Scalars['String']['output'];
  reservation: Scalars['Float']['output'];
  uid: Scalars['String']['output'];
};

export type CompanyPanelCount = {
  companies: Scalars['Int']['output'];
};


export type CompanyPanelCountCompaniesArgs = {
  where?: InputMaybe<CompanyApplicationWhereInput>;
};

export type CompanyPanelNullableRelationFilter = {
  is?: InputMaybe<CompanyPanelWhereInput>;
  isNot?: InputMaybe<CompanyPanelWhereInput>;
};

export type CompanyPanelOrderByWithRelationInput = {
  companies?: InputMaybe<CompanyApplicationOrderByRelationAggregateInput>;
  description?: InputMaybe<SortOrder>;
  event?: InputMaybe<CalendarItemOrderByWithRelationInput>;
  name?: InputMaybe<SortOrder>;
};

export type CompanyPanelUpdateInput = {
  companies: Array<Scalars['String']['input']>;
  description: Scalars['String']['input'];
  name: Scalars['String']['input'];
  season: Scalars['String']['input'];
  uid?: InputMaybe<Scalars['String']['input']>;
};

export type CompanyPanelWhereInput = {
  AND?: InputMaybe<Array<CompanyPanelWhereInput>>;
  NOT?: InputMaybe<Array<CompanyPanelWhereInput>>;
  OR?: InputMaybe<Array<CompanyPanelWhereInput>>;
  companies?: InputMaybe<CompanyApplicationListRelationFilter>;
  description?: InputMaybe<StringFilter>;
  event?: InputMaybe<CalendarItemNullableRelationFilter>;
  name?: InputMaybe<StringFilter>;
};

export type CompanyProgram = {
  booth?: Maybe<Scalars['String']['output']>;
  cocktail?: Maybe<ApplicationCocktail>;
  internship?: Maybe<ApplicationInternship>;
  panel?: Maybe<CompanyPanel>;
  panelParticipants: Array<ApplicationPresenter>;
  talk?: Maybe<ApplicationTalk>;
  workshop?: Maybe<ApplicationWorkshop>;
};

export type CompanyRelationFilter = {
  is?: InputMaybe<CompanyWhereInput>;
  isNot?: InputMaybe<CompanyWhereInput>;
};

export enum CompanyScalarFieldEnum {
  Address = 'address',
  BrandName = 'brandName',
  CreatedAt = 'createdAt',
  DescriptionEn = 'descriptionEn',
  DescriptionHr = 'descriptionHr',
  Facebook = 'facebook',
  Id = 'id',
  IndustryId = 'industryId',
  Instagram = 'instagram',
  LegalName = 'legalName',
  LinkedIn = 'linkedIn',
  RasterLogoId = 'rasterLogoId',
  Uid = 'uid',
  UpdatedAt = 'updatedAt',
  Vat = 'vat',
  VectorLogoId = 'vectorLogoId',
  Website = 'website'
}

export type CompanyScanUserQrRefineData = {
  isStarred?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
};

export type CompanyScanUserQrResponse = {
  alreadyScanned: Scalars['Boolean']['output'];
  error?: Maybe<Scalars['String']['output']>;
  isStarred?: Maybe<Scalars['Boolean']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

export type CompanyScannedUser = {
  isStarred: Scalars['Boolean']['output'];
  note?: Maybe<Scalars['String']['output']>;
  scannedAt: Scalars['DateTimeISO']['output'];
  user?: Maybe<User>;
};

export type CompanyScannedUserListRelationFilter = {
  every?: InputMaybe<CompanyScannedUserWhereInput>;
  none?: InputMaybe<CompanyScannedUserWhereInput>;
  some?: InputMaybe<CompanyScannedUserWhereInput>;
};

export type CompanyScannedUserOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CompanyScannedUserWhereInput = {
  AND?: InputMaybe<Array<CompanyScannedUserWhereInput>>;
  NOT?: InputMaybe<Array<CompanyScannedUserWhereInput>>;
  OR?: InputMaybe<Array<CompanyScannedUserWhereInput>>;
  isStarred?: InputMaybe<BoolFilter>;
  note?: InputMaybe<StringNullableFilter>;
  scannedAt?: InputMaybe<DateTimeFilter>;
};

export type CompanyWhereInput = {
  AND?: InputMaybe<Array<CompanyWhereInput>>;
  NOT?: InputMaybe<Array<CompanyWhereInput>>;
  OR?: InputMaybe<Array<CompanyWhereInput>>;
  address?: InputMaybe<StringFilter>;
  brandName?: InputMaybe<StringFilter>;
  descriptionEn?: InputMaybe<StringFilter>;
  descriptionHr?: InputMaybe<StringFilter>;
  facebook?: InputMaybe<StringNullableFilter>;
  instagram?: InputMaybe<StringNullableFilter>;
  legalName?: InputMaybe<StringFilter>;
  linkedIn?: InputMaybe<StringNullableFilter>;
  vat?: InputMaybe<StringFilter>;
  website?: InputMaybe<StringFilter>;
};

export type CompanyWhereUniqueInput = {
  AND?: InputMaybe<Array<CompanyWhereInput>>;
  NOT?: InputMaybe<Array<CompanyWhereInput>>;
  OR?: InputMaybe<Array<CompanyWhereInput>>;
  address?: InputMaybe<StringFilter>;
  brandName?: InputMaybe<StringFilter>;
  descriptionEn?: InputMaybe<StringFilter>;
  descriptionHr?: InputMaybe<StringFilter>;
  facebook?: InputMaybe<StringNullableFilter>;
  instagram?: InputMaybe<StringNullableFilter>;
  legalName?: InputMaybe<StringFilter>;
  linkedIn?: InputMaybe<StringNullableFilter>;
  vat?: InputMaybe<Scalars['String']['input']>;
  website?: InputMaybe<StringFilter>;
};

export type CreateCompanyApplicationResponse = {
  entity?: Maybe<CompanyApplication>;
  errors?: Maybe<Array<FieldError>>;
};

export type CreateCompanyInput = {
  address: Scalars['String']['input'];
  brandName: Scalars['String']['input'];
  descriptionEn: Scalars['String']['input'];
  descriptionHr: Scalars['String']['input'];
  facebook?: InputMaybe<Scalars['String']['input']>;
  industry: Scalars['String']['input'];
  instagram?: InputMaybe<Scalars['String']['input']>;
  legalName: Scalars['String']['input'];
  linkedIn?: InputMaybe<Scalars['String']['input']>;
  rasterLogo?: InputMaybe<Scalars['Upload']['input']>;
  vat: Scalars['String']['input'];
  vectorLogo?: InputMaybe<Scalars['Upload']['input']>;
  website: Scalars['String']['input'];
};

export type CreateCompanyResponse = {
  entity?: Maybe<Company>;
  errors?: Maybe<Array<FieldError>>;
};

export type CreateGalleryImageResponse = {
  entity?: Maybe<GalleryImage>;
  errors?: Maybe<Array<FieldError>>;
};

export type CreatePartnerResponse = {
  entity?: Maybe<Partner>;
  errors?: Maybe<Array<FieldError>>;
};

export type CreatePressReleaseResponse = {
  entity?: Maybe<PressRelease>;
  errors?: Maybe<Array<FieldError>>;
};

export type CreateSponsorResponse = {
  entity?: Maybe<Sponsor>;
  errors?: Maybe<Array<FieldError>>;
};

export type DateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  in?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
  lt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  lte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  in?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
  lt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  lte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
};

export type EditApprovedCompanyApplicationResponse = {
  entity?: Maybe<CompanyApplication>;
  errors?: Maybe<Array<FieldError>>;
};

export type EntryResumeLogWhereInput = {
  AND?: InputMaybe<Array<EntryResumeLogWhereInput>>;
  NOT?: InputMaybe<Array<EntryResumeLogWhereInput>>;
  OR?: InputMaybe<Array<EntryResumeLogWhereInput>>;
  event?: InputMaybe<StringNullableFilter>;
  eventId?: InputMaybe<IntNullableFilter>;
};

export type EventLog = {
  data?: Maybe<Scalars['String']['output']>;
  date: Scalars['DateTimeISO']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  user?: Maybe<User>;
};

export type EventLogOrderByWithRelationInput = {
  data?: InputMaybe<SortOrderInput>;
  date?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
};

export type EventLogPaginationResult = {
  page: Scalars['Int']['output'];
  perPage: Scalars['Int']['output'];
  records: Array<EventLog>;
  totalRecords: Scalars['Int']['output'];
};

export type EventLogWhereInput = {
  AND?: InputMaybe<Array<EventLogWhereInput>>;
  NOT?: InputMaybe<Array<EventLogWhereInput>>;
  OR?: InputMaybe<Array<EventLogWhereInput>>;
  data?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  user?: InputMaybe<UserNullableRelationFilter>;
};

export type EventReservationResponse = {
  entity?: Maybe<EventReservationStatus>;
  errors?: Maybe<Array<FieldError>>;
};

export type EventReservationStatus = {
  status: Scalars['Int']['output'];
};

export type EventReservationUpdateInput = {
  id: Scalars['String']['input'];
  status: Scalars['Int']['input'];
  type: EventType;
};

export type EventReservationWhereInput = {
  AND?: InputMaybe<Array<EventReservationWhereInput>>;
  NOT?: InputMaybe<Array<EventReservationWhereInput>>;
  OR?: InputMaybe<Array<EventReservationWhereInput>>;
  eventId?: InputMaybe<IntFilter>;
  eventType?: InputMaybe<StringFilter>;
  status?: InputMaybe<IntFilter>;
  user?: InputMaybe<UserRelationFilter>;
};

export enum EventType {
  HotTalk = 'hotTalk',
  Other = 'other',
  Panel = 'panel',
  Talk = 'talk',
  Workshop = 'workshop'
}

export type EventUserApplications = {
  talk: Scalars['Int']['output'];
  workshop: Scalars['Int']['output'];
};

export type FavouriteResumeWhereInput = {
  AND?: InputMaybe<Array<FavouriteResumeWhereInput>>;
  NOT?: InputMaybe<Array<FavouriteResumeWhereInput>>;
  OR?: InputMaybe<Array<FavouriteResumeWhereInput>>;
};

export type FieldError = {
  field: Scalars['String']['output'];
  message: Scalars['String']['output'];
};

export type File = {
  _count?: Maybe<FileCount>;
  createdAt: Scalars['DateTimeISO']['output'];
  etag: Scalars['String']['output'];
  mimeType: Scalars['String']['output'];
  name: Scalars['String']['output'];
  size: Scalars['Int']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
  url: Scalars['String']['output'];
};

export type FileCount = {
  forCompany: Scalars['Int']['output'];
  forPressRelease: Scalars['Int']['output'];
  forResume: Scalars['Int']['output'];
};


export type FileCountForCompanyArgs = {
  where?: InputMaybe<CompanyWhereInput>;
};


export type FileCountForPressReleaseArgs = {
  where?: InputMaybe<PressReleaseWhereInput>;
};


export type FileCountForResumeArgs = {
  where?: InputMaybe<ResumeWhereInput>;
};

export type FileOrderByWithRelationInput = {
  etag?: InputMaybe<SortOrder>;
  mimeType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  uploader?: InputMaybe<UserOrderByWithRelationInput>;
};

export type FileRelationFilter = {
  is?: InputMaybe<FileWhereInput>;
  isNot?: InputMaybe<FileWhereInput>;
};

export type FileWhereInput = {
  AND?: InputMaybe<Array<FileWhereInput>>;
  NOT?: InputMaybe<Array<FileWhereInput>>;
  OR?: InputMaybe<Array<FileWhereInput>>;
  etag?: InputMaybe<StringFilter>;
  mimeType?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  size?: InputMaybe<IntFilter>;
  uploader?: InputMaybe<UserRelationFilter>;
};

export type FloatFilter = {
  equals?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type GalleryImage = {
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  photo?: Maybe<Image>;
  uid: Scalars['String']['output'];
  visible: Scalars['Boolean']['output'];
};

export type GalleryImageCreateInput = {
  name: Scalars['String']['input'];
  photo?: InputMaybe<Scalars['Upload']['input']>;
  visible: Scalars['Boolean']['input'];
};

export type GalleryImageFilter = {
  take?: InputMaybe<Scalars['Int']['input']>;
};

export type GalleryImageWhereInput = {
  AND?: InputMaybe<Array<GalleryImageWhereInput>>;
  NOT?: InputMaybe<Array<GalleryImageWhereInput>>;
  OR?: InputMaybe<Array<GalleryImageWhereInput>>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  photo?: InputMaybe<ImageRelationFilter>;
  visible?: InputMaybe<BoolFilter>;
};

export type GateGuardianLog = {
  eventId: Scalars['Int']['output'];
  eventType: Scalars['String']['output'];
  forCalendarItem?: Maybe<CalendarItem>;
  forUser?: Maybe<User>;
  scannedAt: Scalars['DateTimeISO']['output'];
  scannedBy?: Maybe<User>;
};

export type GateGuardianLogListRelationFilter = {
  every?: InputMaybe<GateGuardianLogWhereInput>;
  none?: InputMaybe<GateGuardianLogWhereInput>;
  some?: InputMaybe<GateGuardianLogWhereInput>;
};

export type GateGuardianLogOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type GateGuardianLogWhereInput = {
  AND?: InputMaybe<Array<GateGuardianLogWhereInput>>;
  NOT?: InputMaybe<Array<GateGuardianLogWhereInput>>;
  OR?: InputMaybe<Array<GateGuardianLogWhereInput>>;
  eventId?: InputMaybe<IntFilter>;
  eventType?: InputMaybe<StringFilter>;
};

export type GateGuardianScanResponse = {
  alreadyScanned: Scalars['Boolean']['output'];
  error?: Maybe<Scalars['String']['output']>;
  hasReservation: Scalars['Boolean']['output'];
  user?: Maybe<User>;
};

export type Image = {
  _count?: Maybe<ImageCount>;
  createdAt: Scalars['DateTimeISO']['output'];
  full: ImageVariation;
  fullUrl: Scalars['String']['output'];
  name: Scalars['String']['output'];
  thumb: ImageVariation;
  thumbUrl: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type ImageCount = {
  ApplicationPresenter: Scalars['Int']['output'];
  Company: Scalars['Int']['output'];
  GalleryImage: Scalars['Int']['output'];
  News: Scalars['Int']['output'];
  Partner: Scalars['Int']['output'];
  Sponsor: Scalars['Int']['output'];
};


export type ImageCountApplicationPresenterArgs = {
  where?: InputMaybe<ApplicationPresenterWhereInput>;
};


export type ImageCountCompanyArgs = {
  where?: InputMaybe<CompanyWhereInput>;
};


export type ImageCountGalleryImageArgs = {
  where?: InputMaybe<GalleryImageWhereInput>;
};


export type ImageCountNewsArgs = {
  where?: InputMaybe<NewsWhereInput>;
};


export type ImageCountPartnerArgs = {
  where?: InputMaybe<PartnerWhereInput>;
};


export type ImageCountSponsorArgs = {
  where?: InputMaybe<SponsorWhereInput>;
};

export type ImageNullableRelationFilter = {
  is?: InputMaybe<ImageWhereInput>;
  isNot?: InputMaybe<ImageWhereInput>;
};

export type ImageRelationFilter = {
  is?: InputMaybe<ImageWhereInput>;
  isNot?: InputMaybe<ImageWhereInput>;
};

export type ImageVariation = {
  _count?: Maybe<ImageVariationCount>;
  etag: Scalars['String']['output'];
  mimeType: Scalars['String']['output'];
};

export type ImageVariationCount = {
  forFull: Scalars['Int']['output'];
  forOriginal: Scalars['Int']['output'];
  forThumb: Scalars['Int']['output'];
};


export type ImageVariationCountForFullArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type ImageVariationCountForOriginalArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type ImageVariationCountForThumbArgs = {
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageVariationRelationFilter = {
  is?: InputMaybe<ImageVariationWhereInput>;
  isNot?: InputMaybe<ImageVariationWhereInput>;
};

export type ImageVariationWhereInput = {
  AND?: InputMaybe<Array<ImageVariationWhereInput>>;
  NOT?: InputMaybe<Array<ImageVariationWhereInput>>;
  OR?: InputMaybe<Array<ImageVariationWhereInput>>;
  etag?: InputMaybe<StringFilter>;
  mimeType?: InputMaybe<StringFilter>;
};

export type ImageWhereInput = {
  AND?: InputMaybe<Array<ImageWhereInput>>;
  NOT?: InputMaybe<Array<ImageWhereInput>>;
  OR?: InputMaybe<Array<ImageWhereInput>>;
  full?: InputMaybe<ImageVariationRelationFilter>;
  name?: InputMaybe<StringFilter>;
  original?: InputMaybe<ImageVariationRelationFilter>;
  thumb?: InputMaybe<ImageVariationRelationFilter>;
  uploader?: InputMaybe<UserRelationFilter>;
};

export type Industry = {
  _count?: Maybe<IndustryCount>;
  name: Scalars['String']['output'];
};

export type IndustryCount = {
  company: Scalars['Int']['output'];
};


export type IndustryCountCompanyArgs = {
  where?: InputMaybe<CompanyWhereInput>;
};

export type IndustryOrderByWithRelationInput = {
  name?: InputMaybe<SortOrder>;
};

export enum IndustryScalarFieldEnum {
  Id = 'id',
  Name = 'name'
}

export type IndustryWhereInput = {
  AND?: InputMaybe<Array<IndustryWhereInput>>;
  NOT?: InputMaybe<Array<IndustryWhereInput>>;
  OR?: InputMaybe<Array<IndustryWhereInput>>;
  name?: InputMaybe<StringFilter>;
};

export type IndustryWhereUniqueInput = {
  AND?: InputMaybe<Array<IndustryWhereInput>>;
  NOT?: InputMaybe<Array<IndustryWhereInput>>;
  OR?: InputMaybe<Array<IndustryWhereInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type InternshipCreateInput = {
  competencies: Scalars['String']['input'];
  description: Scalars['String']['input'];
  duration: Scalars['String']['input'];
  position: Scalars['String']['input'];
  url: Scalars['String']['input'];
  workingPeriodEnd: Scalars['DateTimeISO']['input'];
  workingPeriodStart: Scalars['DateTimeISO']['input'];
};

export type LiveVote = {
  createdAt: Scalars['DateTimeISO']['output'];
  forSeason: Season;
  forUser: User;
  option: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type LiveVoteComment = {
  comment: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  forSeason: Season;
  forUser: User;
  id: Scalars['Int']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type LiveVoteCommentWhereInput = {
  AND?: InputMaybe<Array<LiveVoteCommentWhereInput>>;
  NOT?: InputMaybe<Array<LiveVoteCommentWhereInput>>;
  OR?: InputMaybe<Array<LiveVoteCommentWhereInput>>;
  comment?: InputMaybe<StringFilter>;
  id?: InputMaybe<IntFilter>;
};

export type LiveVoteResult = {
  option: Scalars['String']['output'];
  voteCount: Scalars['Int']['output'];
};

export type LiveVoteWhereInput = {
  AND?: InputMaybe<Array<LiveVoteWhereInput>>;
  NOT?: InputMaybe<Array<LiveVoteWhereInput>>;
  OR?: InputMaybe<Array<LiveVoteWhereInput>>;
  option?: InputMaybe<StringFilter>;
};

export type Mutation = {
  addCompanyMember?: Maybe<Scalars['String']['output']>;
  approveCompanyApplications: Array<CompanyApplicationApproval>;
  checkPasswordReset?: Maybe<User>;
  createCocktailType?: Maybe<ApplicationCocktailType>;
  createCompanyApplication?: Maybe<CreateCompanyApplicationResponse>;
  createCompanyApplicationFor?: Maybe<CreateCompanyApplicationResponse>;
  createGalleryImage?: Maybe<CreateGalleryImageResponse>;
  createIndustry?: Maybe<Industry>;
  createLiveVote?: Maybe<LiveVote>;
  createLiveVoteComment?: Maybe<LiveVoteComment>;
  createNews?: Maybe<NewsCreateResponse>;
  createPartner: CreatePartnerResponse;
  createPressRelease?: Maybe<CreatePressReleaseResponse>;
  createSeason?: Maybe<Season>;
  createSponsor: CreateSponsorResponse;
  createTalkCategory?: Maybe<ApplicationTalkCategory>;
  deleteCalendarItem: Scalars['Boolean']['output'];
  deleteCompanyApplicationFor: Scalars['Boolean']['output'];
  deleteCompanyPanel: Scalars['Boolean']['output'];
  deleteGalleryImage: Scalars['Boolean']['output'];
  deleteLiveVoteComment: Scalars['Boolean']['output'];
  deleteNews?: Maybe<Scalars['Boolean']['output']>;
  deletePartner: Scalars['Boolean']['output'];
  deleteResume: Scalars['Boolean']['output'];
  deleteSeason?: Maybe<Season>;
  deleteSponsor: Scalars['Boolean']['output'];
  deleteUserCompanyComponentRating: Scalars['Boolean']['output'];
  editApprovedCompanyApplication?: Maybe<EditApprovedCompanyApplicationResponse>;
  editGalleryImage?: Maybe<CreateGalleryImageResponse>;
  editNews?: Maybe<NewsCreateResponse>;
  gateGuardianScan?: Maybe<GateGuardianScanResponse>;
  login: AuthResponse;
  logout: Scalars['Boolean']['output'];
  register: AuthResponse;
  registerCompany?: Maybe<CreateCompanyResponse>;
  removeCompanyMember?: Maybe<Scalars['String']['output']>;
  renameCocktailType: ApplicationCocktailType;
  renameIndustry?: Maybe<Industry>;
  renameTalkCategory?: Maybe<ApplicationTalkCategory>;
  requestPasswordReset: Scalars['String']['output'];
  requestPasswordResetFor: Scalars['String']['output'];
  resumeEntryScan?: Maybe<Resume>;
  resumeScan?: Maybe<Scalars['String']['output']>;
  resumeSetIsFavourite: Scalars['Boolean']['output'];
  scanUserQr?: Maybe<CompanyScanUserQrResponse>;
  scanUserQrRefine?: Maybe<CompanyScanUserQrResponse>;
  swapGalleryImageOrder: Scalars['Boolean']['output'];
  swapPartnerOrder: Scalars['Boolean']['output'];
  swapSponsorOrder: Scalars['Boolean']['output'];
  updateCalendarItem?: Maybe<CalendarItem>;
  updateCompanyApplicationFeedback?: Maybe<CompanyApplicationFeedback>;
  updateCompanyInfo?: Maybe<CreateCompanyResponse>;
  updateCompanyMembersFor?: Maybe<CreateCompanyResponse>;
  updateCompanyPanel?: Maybe<CompanyPanel>;
  updateEventReservation?: Maybe<EventReservationResponse>;
  updatePassword?: Maybe<UpdatePasswordResponse>;
  updatePressRelease?: Maybe<CreatePressReleaseResponse>;
  updateProfile?: Maybe<UpdateProfileResponse>;
  updateResume?: Maybe<ResumeCreateResponse>;
  updateScannerStatusFor: Scalars['Boolean']['output'];
  updateSeason?: Maybe<Season>;
  updateTranslation?: Maybe<Translation>;
  updateUser?: Maybe<UpdateProfileResponse>;
  upsertUserCompanyComponentRating: UserCompanyComponentRating;
  usePasswordReset: PasswordResetUseResponse;
  validateVat: ValidateVatResponse;
};


export type MutationAddCompanyMemberArgs = {
  email: Scalars['String']['input'];
};


export type MutationApproveCompanyApplicationsArgs = {
  companies: Array<ApproveCompanyApplicationsInput>;
  season: Scalars['String']['input'];
};


export type MutationCheckPasswordResetArgs = {
  token: Scalars['String']['input'];
};


export type MutationCreateCocktailTypeArgs = {
  season: Scalars['String']['input'];
  type: Scalars['String']['input'];
};


export type MutationCreateCompanyApplicationArgs = {
  info: CompanyApplicationCreateInput;
};


export type MutationCreateCompanyApplicationForArgs = {
  company: Scalars['String']['input'];
  info: CompanyApplicationCreateInput;
  season: Scalars['String']['input'];
};


export type MutationCreateGalleryImageArgs = {
  info: GalleryImageCreateInput;
};


export type MutationCreateIndustryArgs = {
  name: Scalars['String']['input'];
};


export type MutationCreateLiveVoteArgs = {
  seasonUid: Scalars['String']['input'];
  vote: Scalars['String']['input'];
};


export type MutationCreateLiveVoteCommentArgs = {
  comment: Scalars['String']['input'];
  seasonUid: Scalars['String']['input'];
};


export type MutationCreateNewsArgs = {
  info: NewsCreateInput;
};


export type MutationCreatePartnerArgs = {
  info: PartnerCreateInput;
  season: Scalars['String']['input'];
};


export type MutationCreatePressReleaseArgs = {
  info: PressReleaseWithFilesCreateInput;
};


export type MutationCreateSeasonArgs = {
  info: SeasonCreateInput;
};


export type MutationCreateSponsorArgs = {
  info: SponsorCreateInput;
  season: Scalars['String']['input'];
};


export type MutationCreateTalkCategoryArgs = {
  name: Scalars['String']['input'];
  season: Scalars['String']['input'];
};


export type MutationDeleteCalendarItemArgs = {
  uid: Scalars['String']['input'];
};


export type MutationDeleteCompanyApplicationForArgs = {
  company: Scalars['String']['input'];
  season: Scalars['String']['input'];
};


export type MutationDeleteCompanyPanelArgs = {
  uid: Scalars['String']['input'];
};


export type MutationDeleteGalleryImageArgs = {
  uid: Scalars['String']['input'];
};


export type MutationDeleteLiveVoteCommentArgs = {
  commentId: Scalars['Int']['input'];
};


export type MutationDeleteNewsArgs = {
  uid: Scalars['String']['input'];
};


export type MutationDeletePartnerArgs = {
  partner: Scalars['String']['input'];
};


export type MutationDeleteSeasonArgs = {
  uid: Scalars['String']['input'];
};


export type MutationDeleteSponsorArgs = {
  sponsor: Scalars['String']['input'];
};


export type MutationDeleteUserCompanyComponentRatingArgs = {
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
  seasonUid: Scalars['String']['input'];
};


export type MutationEditApprovedCompanyApplicationArgs = {
  info: CompanyApplicationApprovedEditInput;
};


export type MutationEditGalleryImageArgs = {
  info: GalleryImageCreateInput;
  uid: Scalars['String']['input'];
};


export type MutationEditNewsArgs = {
  info: NewsCreateInput;
  uid: Scalars['String']['input'];
};


export type MutationGateGuardianScanArgs = {
  eventType: Scalars['String']['input'];
  eventUid: Scalars['String']['input'];
  userUid: Scalars['String']['input'];
};


export type MutationLoginArgs = {
  identifier: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationRegisterArgs = {
  info: UserRegisterInput;
};


export type MutationRegisterCompanyArgs = {
  info: CreateCompanyInput;
};


export type MutationRemoveCompanyMemberArgs = {
  email: Scalars['String']['input'];
};


export type MutationRenameCocktailTypeArgs = {
  newCocktailType: Scalars['String']['input'];
  oldCocktailType: Scalars['String']['input'];
  season: Scalars['String']['input'];
};


export type MutationRenameIndustryArgs = {
  newName: Scalars['String']['input'];
  oldName: Scalars['String']['input'];
};


export type MutationRenameTalkCategoryArgs = {
  newName: Scalars['String']['input'];
  oldName: Scalars['String']['input'];
  season: Scalars['String']['input'];
};


export type MutationRequestPasswordResetArgs = {
  identifier: Scalars['String']['input'];
};


export type MutationRequestPasswordResetForArgs = {
  uid: Scalars['String']['input'];
};


export type MutationResumeEntryScanArgs = {
  userUid: Scalars['String']['input'];
};


export type MutationResumeScanArgs = {
  userUid: Scalars['String']['input'];
};


export type MutationResumeSetIsFavouriteArgs = {
  isFavourite: Scalars['Boolean']['input'];
  uid: Scalars['String']['input'];
};


export type MutationScanUserQrArgs = {
  userUid: Scalars['String']['input'];
};


export type MutationScanUserQrRefineArgs = {
  refineData: CompanyScanUserQrRefineData;
  userUid: Scalars['String']['input'];
};


export type MutationSwapGalleryImageOrderArgs = {
  orderA: Scalars['Int']['input'];
  orderB: Scalars['Int']['input'];
};


export type MutationSwapPartnerOrderArgs = {
  orderA: Scalars['Int']['input'];
  orderB: Scalars['Int']['input'];
  season: Scalars['String']['input'];
};


export type MutationSwapSponsorOrderArgs = {
  orderA: Scalars['Int']['input'];
  orderB: Scalars['Int']['input'];
  season: Scalars['String']['input'];
};


export type MutationUpdateCalendarItemArgs = {
  input: CalendarUpdateInput;
};


export type MutationUpdateCompanyApplicationFeedbackArgs = {
  input: CompanyApplicationFeedbackCreateInput;
};


export type MutationUpdateCompanyInfoArgs = {
  info: CreateCompanyInput;
};


export type MutationUpdateCompanyMembersForArgs = {
  company: Scalars['String']['input'];
  members: Array<Scalars['String']['input']>;
};


export type MutationUpdateCompanyPanelArgs = {
  input: CompanyPanelUpdateInput;
};


export type MutationUpdateEventReservationArgs = {
  input: EventReservationUpdateInput;
};


export type MutationUpdatePasswordArgs = {
  currentPassword: Scalars['String']['input'];
  newPassword: Scalars['String']['input'];
  newPasswordRepeat: Scalars['String']['input'];
};


export type MutationUpdatePressReleaseArgs = {
  info: PressReleaseWithFilesCreateInput;
  uid: Scalars['String']['input'];
};


export type MutationUpdateProfileArgs = {
  info: UserCreateInput;
};


export type MutationUpdateResumeArgs = {
  info: ResumeCreateInput;
};


export type MutationUpdateScannerStatusForArgs = {
  isScanner: Scalars['Boolean']['input'];
  uid: Scalars['String']['input'];
};


export type MutationUpdateSeasonArgs = {
  info: SeasonUpdateInput;
};


export type MutationUpdateTranslationArgs = {
  data: TranslationCreateInput;
};


export type MutationUpdateUserArgs = {
  info: UserUpdateInput;
  uid: Scalars['String']['input'];
};


export type MutationUpsertUserCompanyComponentRatingArgs = {
  comment?: InputMaybe<Scalars['String']['input']>;
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
  rating: Scalars['Int']['input'];
  seasonUid: Scalars['String']['input'];
};


export type MutationUsePasswordResetArgs = {
  info: PasswordResetUseInput;
};


export type MutationValidateVatArgs = {
  vat: Scalars['String']['input'];
};

export type NestedBoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type NestedDateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  in?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
  lt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  lte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  gte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  in?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
  lt?: InputMaybe<Scalars['DateTimeISO']['input']>;
  lte?: InputMaybe<Scalars['DateTimeISO']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTimeISO']['input']>>;
};

export type NestedFloatFilter = {
  equals?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type News = {
  author?: Maybe<User>;
  content: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  date: Scalars['DateTimeISO']['output'];
  description: Scalars['String']['output'];
  lang: Scalars['String']['output'];
  photo?: Maybe<Image>;
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type NewsCreateInput = {
  content: Scalars['String']['input'];
  date: Scalars['DateTimeISO']['input'];
  description: Scalars['String']['input'];
  lang: Scalars['String']['input'];
  photo?: InputMaybe<Scalars['Upload']['input']>;
  title: Scalars['String']['input'];
};

export type NewsCreateResponse = {
  entity?: Maybe<News>;
  errors?: Maybe<Array<FieldError>>;
};

export type NewsFilter = {
  take?: InputMaybe<Scalars['Int']['input']>;
};

export type NewsWhereInput = {
  AND?: InputMaybe<Array<NewsWhereInput>>;
  NOT?: InputMaybe<Array<NewsWhereInput>>;
  OR?: InputMaybe<Array<NewsWhereInput>>;
  content?: InputMaybe<StringFilter>;
  date?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringFilter>;
  lang?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
};

export enum NullsOrder {
  First = 'first',
  Last = 'last'
}

export type Partner = {
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  photo?: Maybe<Image>;
  uid: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type PartnerCreateInput = {
  name: Scalars['String']['input'];
  photo: Scalars['Upload']['input'];
  url: Scalars['String']['input'];
};

export type PartnerListRelationFilter = {
  every?: InputMaybe<PartnerWhereInput>;
  none?: InputMaybe<PartnerWhereInput>;
  some?: InputMaybe<PartnerWhereInput>;
};

export type PartnerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PartnerWhereInput = {
  AND?: InputMaybe<Array<PartnerWhereInput>>;
  NOT?: InputMaybe<Array<PartnerWhereInput>>;
  OR?: InputMaybe<Array<PartnerWhereInput>>;
  forSeason?: InputMaybe<SeasonRelationFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  photo?: InputMaybe<ImageRelationFilter>;
  url?: InputMaybe<StringFilter>;
};

export type PasswordResetUseInput = {
  newPassword: Scalars['String']['input'];
  newPasswordRepeat: Scalars['String']['input'];
  token: Scalars['String']['input'];
};

export type PasswordResetUseResponse = {
  entity?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<FieldError>>;
};

export type PasswordResetWhereInput = {
  AND?: InputMaybe<Array<PasswordResetWhereInput>>;
  NOT?: InputMaybe<Array<PasswordResetWhereInput>>;
  OR?: InputMaybe<Array<PasswordResetWhereInput>>;
};

export type PresenterCreateInput = {
  bioEn: Scalars['String']['input'];
  bioHr: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  photo?: InputMaybe<Scalars['Upload']['input']>;
};

export type PressRelease = {
  createdAt: Scalars['DateTimeISO']['output'];
  file?: Maybe<File>;
  forSeason?: Maybe<Season>;
  published: Scalars['DateTimeISO']['output'];
  title: Scalars['String']['output'];
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type PressReleaseOrderByWithRelationInput = {
  creator?: InputMaybe<UserOrderByWithRelationInput>;
  file?: InputMaybe<FileOrderByWithRelationInput>;
  forSeason?: InputMaybe<SeasonOrderByWithRelationInput>;
  published?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
};

export enum PressReleaseScalarFieldEnum {
  CreatedAt = 'createdAt',
  CreatorId = 'creatorId',
  FileId = 'fileId',
  ForSeasonId = 'forSeasonId',
  Id = 'id',
  Published = 'published',
  Title = 'title',
  Uid = 'uid',
  UpdatedAt = 'updatedAt'
}

export type PressReleaseWhereInput = {
  AND?: InputMaybe<Array<PressReleaseWhereInput>>;
  NOT?: InputMaybe<Array<PressReleaseWhereInput>>;
  OR?: InputMaybe<Array<PressReleaseWhereInput>>;
  creator?: InputMaybe<UserRelationFilter>;
  file?: InputMaybe<FileRelationFilter>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  published?: InputMaybe<DateTimeFilter>;
  title?: InputMaybe<StringFilter>;
};

export type PressReleaseWhereUniqueInput = {
  AND?: InputMaybe<Array<PressReleaseWhereInput>>;
  NOT?: InputMaybe<Array<PressReleaseWhereInput>>;
  OR?: InputMaybe<Array<PressReleaseWhereInput>>;
  creator?: InputMaybe<UserRelationFilter>;
  file?: InputMaybe<FileRelationFilter>;
  forSeason?: InputMaybe<SeasonNullableRelationFilter>;
  published?: InputMaybe<DateTimeFilter>;
  title?: InputMaybe<StringFilter>;
};

export type PressReleaseWithFilesCreateInput = {
  file?: InputMaybe<Scalars['Upload']['input']>;
  published: Scalars['DateTimeISO']['input'];
  season: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type Query = {
  allGalleryImages: Array<GalleryImage>;
  allNews: Array<News>;
  allTranslationsFor: Array<Translation>;
  approvedCompanyApplications: Array<CompanyApplicationApproval>;
  availableCocktailTypes: Array<ApplicationCocktailType>;
  booths: Array<Booth>;
  calendar: Array<CalendarItem>;
  calendarItem?: Maybe<CalendarItem>;
  calendarItemCompanyUid?: Maybe<Scalars['String']['output']>;
  calendarOld: Array<CalendarEvent>;
  cocktailTypes: Array<ApplicationCocktailType>;
  companies: Array<Company>;
  company?: Maybe<Company>;
  companyApplication?: Maybe<CompanyApplication>;
  companyApplicationFor?: Maybe<CompanyApplication>;
  companyApplications?: Maybe<Array<CompanyApplication>>;
  companyComponentAverageRatings: Array<UserCompanyComponentRatingComponentAverage>;
  companyInfo?: Maybe<Company>;
  currentSeason?: Maybe<Season>;
  eventLog: EventLogPaginationResult;
  findFirstTranslation?: Maybe<Translation>;
  galleryImageItemByUid?: Maybe<GalleryImage>;
  galleryImages: Array<GalleryImage>;
  gateGuardianScanList?: Maybe<Array<GateGuardianLog>>;
  industries: Array<Industry>;
  internships: Array<ApplicationInternship>;
  liveVoteComments: Array<LiveVoteComment>;
  liveVoteResults: Array<LiveVoteResult>;
  liveVotes: Array<LiveVote>;
  myLiveVote?: Maybe<LiveVote>;
  myLiveVoteComments: Array<LiveVoteComment>;
  news: Array<News>;
  newsItem?: Maybe<News>;
  newsItemByUid?: Maybe<News>;
  participants: Array<Company>;
  partners: Array<Partner>;
  pressRelease?: Maybe<PressRelease>;
  pressReleases: Array<PressRelease>;
  profile?: Maybe<User>;
  resume?: Maybe<Resume>;
  resumeFavourites: Array<Scalars['String']['output']>;
  resumeInterests: SearchResponseStringArray;
  resumeIsFavourite: Scalars['Boolean']['output'];
  resumeTechnologies: SearchResponseStringArray;
  resumes: ResumeList;
  resumesFavourites: ResumeList;
  resumesScanned: ResumeList;
  roles: Array<Role>;
  scannedUsers: Array<CompanyScannedUser>;
  season?: Maybe<Season>;
  seasons: Array<Season>;
  sessions: Array<Session>;
  sessionsFor: Array<Session>;
  sponsors: Array<Sponsor>;
  talkCategories: Array<ApplicationTalkCategory>;
  translation?: Maybe<Translation>;
  translations: Array<Translation>;
  user?: Maybe<User>;
  userCompanyComponentRating?: Maybe<UserCompanyComponentRating>;
  userCompanyComponentRatings: Array<UserCompanyComponentRating>;
  users: Array<User>;
};


export type QueryAllNewsArgs = {
  filter?: InputMaybe<NewsFilter>;
};


export type QueryAllTranslationsForArgs = {
  language: Scalars['String']['input'];
};


export type QueryAvailableCocktailTypesArgs = {
  cursor?: InputMaybe<ApplicationCocktailTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApplicationCocktailTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApplicationCocktailTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ApplicationCocktailTypeWhereInput>;
};


export type QueryCalendarArgs = {
  filter?: InputMaybe<CalendarFilterInput>;
  season?: InputMaybe<Scalars['String']['input']>;
};


export type QueryCalendarItemArgs = {
  uid: Scalars['String']['input'];
};


export type QueryCalendarItemCompanyUidArgs = {
  uid: Scalars['String']['input'];
};


export type QueryCocktailTypesArgs = {
  cursor?: InputMaybe<ApplicationCocktailTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApplicationCocktailTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApplicationCocktailTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ApplicationCocktailTypeWhereInput>;
};


export type QueryCompaniesArgs = {
  cursor?: InputMaybe<CompanyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompanyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompanyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompanyWhereInput>;
};


export type QueryCompanyArgs = {
  vat: Scalars['String']['input'];
};


export type QueryCompanyApplicationForArgs = {
  company: Scalars['String']['input'];
  season: Scalars['String']['input'];
};


export type QueryCompanyApplicationsArgs = {
  cursor?: InputMaybe<CompanyApplicationWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompanyApplicationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompanyApplicationOrderByWithRelationInput>>;
  season?: InputMaybe<Scalars['String']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompanyApplicationWhereInput>;
};


export type QueryCompanyComponentAverageRatingsArgs = {
  companyUid?: InputMaybe<Scalars['String']['input']>;
  seasonUid: Scalars['String']['input'];
};


export type QueryCompanyInfoArgs = {
  uid: Scalars['String']['input'];
};


export type QueryEventLogArgs = {
  orderBy?: InputMaybe<Array<EventLogOrderByWithRelationInput>>;
  page: Scalars['Int']['input'];
  perPage: Scalars['Int']['input'];
  where?: InputMaybe<Scalars['String']['input']>;
};


export type QueryFindFirstTranslationArgs = {
  cursor?: InputMaybe<TranslationWhereUniqueInput>;
  distinct?: InputMaybe<Array<TranslationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TranslationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TranslationWhereInput>;
};


export type QueryGalleryImageItemByUidArgs = {
  uid: Scalars['String']['input'];
};


export type QueryGalleryImagesArgs = {
  filter?: InputMaybe<GalleryImageFilter>;
};


export type QueryGateGuardianScanListArgs = {
  season: Scalars['String']['input'];
};


export type QueryIndustriesArgs = {
  cursor?: InputMaybe<IndustryWhereUniqueInput>;
  distinct?: InputMaybe<Array<IndustryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<IndustryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<IndustryWhereInput>;
};


export type QueryInternshipsArgs = {
  cursor?: InputMaybe<ApplicationInternshipWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApplicationInternshipScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApplicationInternshipOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ApplicationInternshipWhereInput>;
};


export type QueryLiveVoteCommentsArgs = {
  seasonUid: Scalars['String']['input'];
};


export type QueryLiveVoteResultsArgs = {
  seasonUid: Scalars['String']['input'];
};


export type QueryLiveVotesArgs = {
  seasonUid: Scalars['String']['input'];
};


export type QueryMyLiveVoteArgs = {
  seasonUid: Scalars['String']['input'];
};


export type QueryMyLiveVoteCommentsArgs = {
  seasonUid: Scalars['String']['input'];
};


export type QueryNewsArgs = {
  filter?: InputMaybe<NewsFilter>;
  lang: Scalars['String']['input'];
};


export type QueryNewsItemArgs = {
  slug: Scalars['String']['input'];
};


export type QueryNewsItemByUidArgs = {
  uid: Scalars['String']['input'];
};


export type QueryParticipantsArgs = {
  cursor?: InputMaybe<CompanyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompanyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompanyOrderByWithRelationInput>>;
  season?: InputMaybe<Scalars['String']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompanyWhereInput>;
};


export type QueryPartnersArgs = {
  season?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPressReleaseArgs = {
  uid: Scalars['String']['input'];
};


export type QueryPressReleasesArgs = {
  cursor?: InputMaybe<PressReleaseWhereUniqueInput>;
  distinct?: InputMaybe<Array<PressReleaseScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PressReleaseOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PressReleaseWhereInput>;
};


export type QueryResumeArgs = {
  uid: Scalars['String']['input'];
};


export type QueryResumeInterestsArgs = {
  index?: InputMaybe<Scalars['Int']['input']>;
  query: Scalars['String']['input'];
};


export type QueryResumeIsFavouriteArgs = {
  uid: Scalars['String']['input'];
};


export type QueryResumeTechnologiesArgs = {
  index?: InputMaybe<Scalars['Int']['input']>;
  query: Scalars['String']['input'];
};


export type QueryResumesArgs = {
  filter?: InputMaybe<ResumeFindManyInput>;
};


export type QueryResumesFavouritesArgs = {
  filter?: InputMaybe<ResumeFindManyInput>;
};


export type QueryResumesScannedArgs = {
  filter?: InputMaybe<ResumeFindManyInput>;
};


export type QueryRolesArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QueryScannedUsersArgs = {
  companyUid?: InputMaybe<Scalars['String']['input']>;
  seasonUid?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySeasonArgs = {
  uid: Scalars['String']['input'];
};


export type QuerySeasonsArgs = {
  cursor?: InputMaybe<SeasonWhereUniqueInput>;
  distinct?: InputMaybe<Array<SeasonScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SeasonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SeasonWhereInput>;
};


export type QuerySessionsForArgs = {
  uid: Scalars['String']['input'];
};


export type QuerySponsorsArgs = {
  season?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTalkCategoriesArgs = {
  cursor?: InputMaybe<ApplicationTalkCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApplicationTalkCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApplicationTalkCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ApplicationTalkCategoryWhereInput>;
};


export type QueryTranslationArgs = {
  where: TranslationWhereUniqueInput;
};


export type QueryTranslationsArgs = {
  cursor?: InputMaybe<TranslationWhereUniqueInput>;
  distinct?: InputMaybe<Array<TranslationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TranslationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TranslationWhereInput>;
};


export type QueryUserArgs = {
  uid: Scalars['String']['input'];
};


export type QueryUserCompanyComponentRatingArgs = {
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
  seasonUid: Scalars['String']['input'];
};


export type QueryUserCompanyComponentRatingsArgs = {
  companyUid: Scalars['String']['input'];
  seasonUid: Scalars['String']['input'];
};


export type QueryUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive'
}

export type ReservationItem = {
  count: Scalars['Float']['output'];
  type: Scalars['String']['output'];
  uid: Scalars['String']['output'];
};

export type Resume = {
  _count?: Maybe<ResumeCount>;
  city: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  cv?: Maybe<File>;
  extraField: Scalars['String']['output'];
  faculty?: Maybe<ResumeFaculty>;
  interests: Array<Scalars['String']['output']>;
  projects: Array<ResumeProject>;
  studyYears: Array<ResumeStudyYear>;
  technologies: Array<Scalars['String']['output']>;
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
  user: User;
  volunteerExperiences: Array<ResumeVolunteerExperience>;
  workExperiences: Array<ResumeWorkExperience>;
};

export type ResumeCount = {
  entryLog: Scalars['Int']['output'];
  favouriteResumes: Scalars['Int']['output'];
  interests: Scalars['Int']['output'];
  projects: Scalars['Int']['output'];
  scannedResumes: Scalars['Int']['output'];
  studyYears: Scalars['Int']['output'];
  technologies: Scalars['Int']['output'];
  volunteerExperiences: Scalars['Int']['output'];
  workExperiences: Scalars['Int']['output'];
};


export type ResumeCountEntryLogArgs = {
  where?: InputMaybe<EntryResumeLogWhereInput>;
};


export type ResumeCountFavouriteResumesArgs = {
  where?: InputMaybe<FavouriteResumeWhereInput>;
};


export type ResumeCountInterestsArgs = {
  where?: InputMaybe<ResumeInterestWhereInput>;
};


export type ResumeCountProjectsArgs = {
  where?: InputMaybe<ResumeProjectWhereInput>;
};


export type ResumeCountScannedResumesArgs = {
  where?: InputMaybe<ScannedResumeWhereInput>;
};


export type ResumeCountStudyYearsArgs = {
  where?: InputMaybe<ResumeStudyYearWhereInput>;
};


export type ResumeCountTechnologiesArgs = {
  where?: InputMaybe<ResumeTechnologyWhereInput>;
};


export type ResumeCountVolunteerExperiencesArgs = {
  where?: InputMaybe<ResumeVolunteerExperienceWhereInput>;
};


export type ResumeCountWorkExperiencesArgs = {
  where?: InputMaybe<ResumeWorkExperienceWhereInput>;
};

export type ResumeCreateCvInput = {
  cv?: InputMaybe<Scalars['Upload']['input']>;
  keepOld: Scalars['Boolean']['input'];
};

export type ResumeCreateInput = {
  city: Scalars['String']['input'];
  extraField?: InputMaybe<Scalars['String']['input']>;
  faculty: ResumeFacultyCreateInput;
  interests: Array<Scalars['String']['input']>;
  pdf?: InputMaybe<ResumeCreateCvInput>;
  projects: Array<ResumeProjectCreateInput>;
  studyYears: Array<ResumeStudyYearCreateInput>;
  technologies: Array<Scalars['String']['input']>;
  volunteerExperiences: Array<ResumeVolunteerExperienceCreateInput>;
  workExperiences: Array<ResumeWorkExperienceCreateInput>;
};

export type ResumeCreateResponse = {
  entity?: Maybe<Resume>;
  errors?: Maybe<Array<FieldError>>;
};

export type ResumeFaculty = {
  module: Scalars['String']['output'];
  name: Scalars['String']['output'];
  specialization: Scalars['String']['output'];
};

export type ResumeFacultyCreateInput = {
  module: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type ResumeFacultyNullableRelationFilter = {
  is?: InputMaybe<ResumeFacultyWhereInput>;
  isNot?: InputMaybe<ResumeFacultyWhereInput>;
};

export type ResumeFacultyOrderByWithRelationInput = {
  module?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  specialization?: InputMaybe<SortOrder>;
};

export type ResumeFacultyWhereInput = {
  AND?: InputMaybe<Array<ResumeFacultyWhereInput>>;
  NOT?: InputMaybe<Array<ResumeFacultyWhereInput>>;
  OR?: InputMaybe<Array<ResumeFacultyWhereInput>>;
  module?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  specialization?: InputMaybe<StringFilter>;
};

export type ResumeFindManyInput = {
  orderBy?: InputMaybe<Array<ResumeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ResumeWhereInput>;
  whereUser?: InputMaybe<Scalars['String']['input']>;
};

export type ResumeInterestListRelationFilter = {
  every?: InputMaybe<ResumeInterestWhereInput>;
  none?: InputMaybe<ResumeInterestWhereInput>;
  some?: InputMaybe<ResumeInterestWhereInput>;
};

export type ResumeInterestOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeInterestWhereInput = {
  AND?: InputMaybe<Array<ResumeInterestWhereInput>>;
  NOT?: InputMaybe<Array<ResumeInterestWhereInput>>;
  OR?: InputMaybe<Array<ResumeInterestWhereInput>>;
  name?: InputMaybe<StringFilter>;
};

export type ResumeList = {
  items: Array<Resume>;
  total: Scalars['Int']['output'];
};

export type ResumeOrderByWithRelationInput = {
  city?: InputMaybe<SortOrder>;
  extraField?: InputMaybe<SortOrder>;
  faculty?: InputMaybe<ResumeFacultyOrderByWithRelationInput>;
  interests?: InputMaybe<ResumeInterestOrderByRelationAggregateInput>;
  projects?: InputMaybe<ResumeProjectOrderByRelationAggregateInput>;
  studyYears?: InputMaybe<ResumeStudyYearOrderByRelationAggregateInput>;
  technologies?: InputMaybe<ResumeTechnologyOrderByRelationAggregateInput>;
  volunteerExperiences?: InputMaybe<ResumeVolunteerExperienceOrderByRelationAggregateInput>;
  workExperiences?: InputMaybe<ResumeWorkExperienceOrderByRelationAggregateInput>;
};

export type ResumeProject = {
  position: Scalars['String']['output'];
  project: Scalars['String']['output'];
  start: Scalars['DateTimeISO']['output'];
  until?: Maybe<Scalars['DateTimeISO']['output']>;
};

export type ResumeProjectCreateInput = {
  position: Scalars['String']['input'];
  project: Scalars['String']['input'];
  start: Scalars['DateTimeISO']['input'];
  until?: InputMaybe<Scalars['DateTimeISO']['input']>;
};

export type ResumeProjectListRelationFilter = {
  every?: InputMaybe<ResumeProjectWhereInput>;
  none?: InputMaybe<ResumeProjectWhereInput>;
  some?: InputMaybe<ResumeProjectWhereInput>;
};

export type ResumeProjectOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeProjectWhereInput = {
  AND?: InputMaybe<Array<ResumeProjectWhereInput>>;
  NOT?: InputMaybe<Array<ResumeProjectWhereInput>>;
  OR?: InputMaybe<Array<ResumeProjectWhereInput>>;
  position?: InputMaybe<StringFilter>;
  project?: InputMaybe<StringFilter>;
  start?: InputMaybe<DateTimeFilter>;
  until?: InputMaybe<DateTimeNullableFilter>;
};

export type ResumeStudyYear = {
  studyType: Scalars['String']['output'];
  studyYear: Scalars['Int']['output'];
};

export type ResumeStudyYearCreateInput = {
  studyType: Scalars['String']['input'];
  studyYear: Scalars['Float']['input'];
};

export type ResumeStudyYearListRelationFilter = {
  every?: InputMaybe<ResumeStudyYearWhereInput>;
  none?: InputMaybe<ResumeStudyYearWhereInput>;
  some?: InputMaybe<ResumeStudyYearWhereInput>;
};

export type ResumeStudyYearOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeStudyYearWhereInput = {
  AND?: InputMaybe<Array<ResumeStudyYearWhereInput>>;
  NOT?: InputMaybe<Array<ResumeStudyYearWhereInput>>;
  OR?: InputMaybe<Array<ResumeStudyYearWhereInput>>;
  studyType?: InputMaybe<StringFilter>;
  studyYear?: InputMaybe<IntFilter>;
};

export type ResumeTechnologyListRelationFilter = {
  every?: InputMaybe<ResumeTechnologyWhereInput>;
  none?: InputMaybe<ResumeTechnologyWhereInput>;
  some?: InputMaybe<ResumeTechnologyWhereInput>;
};

export type ResumeTechnologyOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeTechnologyWhereInput = {
  AND?: InputMaybe<Array<ResumeTechnologyWhereInput>>;
  NOT?: InputMaybe<Array<ResumeTechnologyWhereInput>>;
  OR?: InputMaybe<Array<ResumeTechnologyWhereInput>>;
  name?: InputMaybe<StringFilter>;
};

export type ResumeVolunteerExperience = {
  organisation: Scalars['String']['output'];
  position: Scalars['String']['output'];
  start: Scalars['DateTimeISO']['output'];
  until?: Maybe<Scalars['DateTimeISO']['output']>;
};

export type ResumeVolunteerExperienceCreateInput = {
  organisation: Scalars['String']['input'];
  position: Scalars['String']['input'];
  start: Scalars['DateTimeISO']['input'];
  until?: InputMaybe<Scalars['DateTimeISO']['input']>;
};

export type ResumeVolunteerExperienceListRelationFilter = {
  every?: InputMaybe<ResumeVolunteerExperienceWhereInput>;
  none?: InputMaybe<ResumeVolunteerExperienceWhereInput>;
  some?: InputMaybe<ResumeVolunteerExperienceWhereInput>;
};

export type ResumeVolunteerExperienceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeVolunteerExperienceWhereInput = {
  AND?: InputMaybe<Array<ResumeVolunteerExperienceWhereInput>>;
  NOT?: InputMaybe<Array<ResumeVolunteerExperienceWhereInput>>;
  OR?: InputMaybe<Array<ResumeVolunteerExperienceWhereInput>>;
  organisation?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  start?: InputMaybe<DateTimeFilter>;
  until?: InputMaybe<DateTimeNullableFilter>;
};

export type ResumeWhereInput = {
  AND?: InputMaybe<Array<ResumeWhereInput>>;
  NOT?: InputMaybe<Array<ResumeWhereInput>>;
  OR?: InputMaybe<Array<ResumeWhereInput>>;
  city?: InputMaybe<StringFilter>;
  extraField?: InputMaybe<StringFilter>;
  faculty?: InputMaybe<ResumeFacultyNullableRelationFilter>;
  interests?: InputMaybe<ResumeInterestListRelationFilter>;
  projects?: InputMaybe<ResumeProjectListRelationFilter>;
  studyYears?: InputMaybe<ResumeStudyYearListRelationFilter>;
  technologies?: InputMaybe<ResumeTechnologyListRelationFilter>;
  volunteerExperiences?: InputMaybe<ResumeVolunteerExperienceListRelationFilter>;
  workExperiences?: InputMaybe<ResumeWorkExperienceListRelationFilter>;
};

export type ResumeWorkExperience = {
  company: Scalars['String']['output'];
  position: Scalars['String']['output'];
  start: Scalars['DateTimeISO']['output'];
  until?: Maybe<Scalars['DateTimeISO']['output']>;
};

export type ResumeWorkExperienceCreateInput = {
  company: Scalars['String']['input'];
  position: Scalars['String']['input'];
  start: Scalars['DateTimeISO']['input'];
  until?: InputMaybe<Scalars['DateTimeISO']['input']>;
};

export type ResumeWorkExperienceListRelationFilter = {
  every?: InputMaybe<ResumeWorkExperienceWhereInput>;
  none?: InputMaybe<ResumeWorkExperienceWhereInput>;
  some?: InputMaybe<ResumeWorkExperienceWhereInput>;
};

export type ResumeWorkExperienceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ResumeWorkExperienceWhereInput = {
  AND?: InputMaybe<Array<ResumeWorkExperienceWhereInput>>;
  NOT?: InputMaybe<Array<ResumeWorkExperienceWhereInput>>;
  OR?: InputMaybe<Array<ResumeWorkExperienceWhereInput>>;
  company?: InputMaybe<StringFilter>;
  position?: InputMaybe<StringFilter>;
  start?: InputMaybe<DateTimeFilter>;
  until?: InputMaybe<DateTimeNullableFilter>;
};

export type Role = {
  _count?: Maybe<RoleCount>;
  createdAt: Scalars['DateTimeISO']['output'];
  name: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type RoleCount = {
  users: Scalars['Int']['output'];
};


export type RoleCountUsersArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type RoleOrderByWithRelationInput = {
  name?: InputMaybe<SortOrder>;
};

export enum RoleScalarFieldEnum {
  CreatedAt = 'createdAt',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt'
}

export type RoleWhereInput = {
  AND?: InputMaybe<Array<RoleWhereInput>>;
  NOT?: InputMaybe<Array<RoleWhereInput>>;
  OR?: InputMaybe<Array<RoleWhereInput>>;
  name?: InputMaybe<StringFilter>;
};

export type RoleWhereUniqueInput = {
  AND?: InputMaybe<Array<RoleWhereInput>>;
  NOT?: InputMaybe<Array<RoleWhereInput>>;
  OR?: InputMaybe<Array<RoleWhereInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ScannedResumeWhereInput = {
  AND?: InputMaybe<Array<ScannedResumeWhereInput>>;
  NOT?: InputMaybe<Array<ScannedResumeWhereInput>>;
  OR?: InputMaybe<Array<ScannedResumeWhereInput>>;
};

export type SearchResponseStringArray = {
  entities: Array<Scalars['String']['output']>;
  index: Scalars['Float']['output'];
};

export type Season = {
  _count?: Maybe<SeasonCount>;
  applications: Array<CompanyApplication>;
  applicationsEditableFrom: Scalars['DateTimeISO']['output'];
  applicationsEditableUntil: Scalars['DateTimeISO']['output'];
  applicationsFrom: Scalars['DateTimeISO']['output'];
  applicationsUntil: Scalars['DateTimeISO']['output'];
  calendar: Array<CalendarItem>;
  companyComponentAverageRatings: Array<UserCompanyComponentRatingComponentAverage>;
  companyScannedCvs: Scalars['Int']['output'];
  endsAt: Scalars['DateTimeISO']['output'];
  entryCount: Scalars['Int']['output'];
  eventFrom: Scalars['DateTimeISO']['output'];
  eventUntil: Scalars['DateTimeISO']['output'];
  feedbackFrom: Scalars['DateTimeISO']['output'];
  feedbackUntil: Scalars['DateTimeISO']['output'];
  name: Scalars['String']['output'];
  panel?: Maybe<CompanyPanel>;
  reservations: Array<ReservationItem>;
  scheduleFrom: Scalars['DateTimeISO']['output'];
  scheduleUntil: Scalars['DateTimeISO']['output'];
  showParticipantsFrom: Scalars['DateTimeISO']['output'];
  showParticipantsUntil: Scalars['DateTimeISO']['output'];
  showPartnersFrom: Scalars['DateTimeISO']['output'];
  showPartnersUntil: Scalars['DateTimeISO']['output'];
  showSponsorsFrom: Scalars['DateTimeISO']['output'];
  showSponsorsUntil: Scalars['DateTimeISO']['output'];
  startsAt: Scalars['DateTimeISO']['output'];
  uid: Scalars['String']['output'];
};

export type SeasonCount = {
  ApplicationCocktailType: Scalars['Int']['output'];
  LiveVote: Scalars['Int']['output'];
  LiveVoteComment: Scalars['Int']['output'];
  UserCompanyComponentRatingAveragesView: Scalars['Int']['output'];
  UserCompanyComponentRatings: Scalars['Int']['output'];
  calendar: Scalars['Int']['output'];
  companies: Scalars['Int']['output'];
  entryLog: Scalars['Int']['output'];
  favouriteResumes: Scalars['Int']['output'];
  gateGuardianLog: Scalars['Int']['output'];
  partners: Scalars['Int']['output'];
  pressReleases: Scalars['Int']['output'];
  scannedResumes: Scalars['Int']['output'];
  scannedUsers: Scalars['Int']['output'];
  sponsors: Scalars['Int']['output'];
  talkCategories: Scalars['Int']['output'];
};


export type SeasonCountApplicationCocktailTypeArgs = {
  where?: InputMaybe<ApplicationCocktailTypeWhereInput>;
};


export type SeasonCountLiveVoteArgs = {
  where?: InputMaybe<LiveVoteWhereInput>;
};


export type SeasonCountLiveVoteCommentArgs = {
  where?: InputMaybe<LiveVoteCommentWhereInput>;
};


export type SeasonCountUserCompanyComponentRatingAveragesViewArgs = {
  where?: InputMaybe<UserCompanyComponentRatingAveragesViewWhereInput>;
};


export type SeasonCountUserCompanyComponentRatingsArgs = {
  where?: InputMaybe<UserCompanyComponentRatingWhereInput>;
};


export type SeasonCountCalendarArgs = {
  where?: InputMaybe<CalendarItemWhereInput>;
};


export type SeasonCountCompaniesArgs = {
  where?: InputMaybe<CompanyApplicationWhereInput>;
};


export type SeasonCountEntryLogArgs = {
  where?: InputMaybe<EntryResumeLogWhereInput>;
};


export type SeasonCountFavouriteResumesArgs = {
  where?: InputMaybe<FavouriteResumeWhereInput>;
};


export type SeasonCountGateGuardianLogArgs = {
  where?: InputMaybe<GateGuardianLogWhereInput>;
};


export type SeasonCountPartnersArgs = {
  where?: InputMaybe<PartnerWhereInput>;
};


export type SeasonCountPressReleasesArgs = {
  where?: InputMaybe<PressReleaseWhereInput>;
};


export type SeasonCountScannedResumesArgs = {
  where?: InputMaybe<ScannedResumeWhereInput>;
};


export type SeasonCountScannedUsersArgs = {
  where?: InputMaybe<CompanyScannedUserWhereInput>;
};


export type SeasonCountSponsorsArgs = {
  where?: InputMaybe<SponsorWhereInput>;
};


export type SeasonCountTalkCategoriesArgs = {
  where?: InputMaybe<ApplicationTalkCategoryWhereInput>;
};

export type SeasonCreateInput = {
  applicationsEditableFrom: Scalars['DateTimeISO']['input'];
  applicationsEditableUntil: Scalars['DateTimeISO']['input'];
  applicationsFrom: Scalars['DateTimeISO']['input'];
  applicationsUntil: Scalars['DateTimeISO']['input'];
  endsAt: Scalars['DateTimeISO']['input'];
  eventFrom: Scalars['DateTimeISO']['input'];
  eventUntil: Scalars['DateTimeISO']['input'];
  feedbackFrom: Scalars['DateTimeISO']['input'];
  feedbackUntil: Scalars['DateTimeISO']['input'];
  name: Scalars['String']['input'];
  scheduleFrom: Scalars['DateTimeISO']['input'];
  scheduleUntil: Scalars['DateTimeISO']['input'];
  showParticipantsFrom: Scalars['DateTimeISO']['input'];
  showParticipantsUntil: Scalars['DateTimeISO']['input'];
  showPartnersFrom: Scalars['DateTimeISO']['input'];
  showPartnersUntil: Scalars['DateTimeISO']['input'];
  showSponsorsFrom: Scalars['DateTimeISO']['input'];
  showSponsorsUntil: Scalars['DateTimeISO']['input'];
  startsAt: Scalars['DateTimeISO']['input'];
};

export type SeasonNullableRelationFilter = {
  is?: InputMaybe<SeasonWhereInput>;
  isNot?: InputMaybe<SeasonWhereInput>;
};

export type SeasonOrderByWithRelationInput = {
  ApplicationCocktailType?: InputMaybe<ApplicationCocktailTypeOrderByRelationAggregateInput>;
  applicationsEditableFrom?: InputMaybe<SortOrder>;
  applicationsEditableUntil?: InputMaybe<SortOrder>;
  applicationsFrom?: InputMaybe<SortOrder>;
  applicationsUntil?: InputMaybe<SortOrder>;
  calendar?: InputMaybe<CalendarItemOrderByRelationAggregateInput>;
  companies?: InputMaybe<CompanyApplicationOrderByRelationAggregateInput>;
  endsAt?: InputMaybe<SortOrder>;
  eventFrom?: InputMaybe<SortOrder>;
  eventUntil?: InputMaybe<SortOrder>;
  feedbackFrom?: InputMaybe<SortOrder>;
  feedbackUntil?: InputMaybe<SortOrder>;
  gateGuardianLog?: InputMaybe<GateGuardianLogOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  partners?: InputMaybe<PartnerOrderByRelationAggregateInput>;
  scannedUsers?: InputMaybe<CompanyScannedUserOrderByRelationAggregateInput>;
  scheduleFrom?: InputMaybe<SortOrder>;
  scheduleUntil?: InputMaybe<SortOrder>;
  showParticipantsFrom?: InputMaybe<SortOrder>;
  showParticipantsUntil?: InputMaybe<SortOrder>;
  showPartnersFrom?: InputMaybe<SortOrder>;
  showPartnersUntil?: InputMaybe<SortOrder>;
  showSponsorsFrom?: InputMaybe<SortOrder>;
  showSponsorsUntil?: InputMaybe<SortOrder>;
  sponsors?: InputMaybe<SponsorOrderByRelationAggregateInput>;
  startsAt?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export type SeasonRelationFilter = {
  is?: InputMaybe<SeasonWhereInput>;
  isNot?: InputMaybe<SeasonWhereInput>;
};

export enum SeasonScalarFieldEnum {
  ApplicationsEditableFrom = 'applicationsEditableFrom',
  ApplicationsEditableUntil = 'applicationsEditableUntil',
  ApplicationsFrom = 'applicationsFrom',
  ApplicationsUntil = 'applicationsUntil',
  EndsAt = 'endsAt',
  EventFrom = 'eventFrom',
  EventUntil = 'eventUntil',
  FeedbackFrom = 'feedbackFrom',
  FeedbackUntil = 'feedbackUntil',
  Id = 'id',
  Name = 'name',
  ScheduleFrom = 'scheduleFrom',
  ScheduleUntil = 'scheduleUntil',
  ShowParticipantsFrom = 'showParticipantsFrom',
  ShowParticipantsUntil = 'showParticipantsUntil',
  ShowPartnersFrom = 'showPartnersFrom',
  ShowPartnersUntil = 'showPartnersUntil',
  ShowSponsorsFrom = 'showSponsorsFrom',
  ShowSponsorsUntil = 'showSponsorsUntil',
  StartsAt = 'startsAt',
  Uid = 'uid'
}

export type SeasonUpdateInput = {
  applicationsEditableFrom: Scalars['DateTimeISO']['input'];
  applicationsEditableUntil: Scalars['DateTimeISO']['input'];
  applicationsFrom: Scalars['DateTimeISO']['input'];
  applicationsUntil: Scalars['DateTimeISO']['input'];
  endsAt: Scalars['DateTimeISO']['input'];
  eventFrom: Scalars['DateTimeISO']['input'];
  eventUntil: Scalars['DateTimeISO']['input'];
  feedbackFrom: Scalars['DateTimeISO']['input'];
  feedbackUntil: Scalars['DateTimeISO']['input'];
  name: Scalars['String']['input'];
  scheduleFrom: Scalars['DateTimeISO']['input'];
  scheduleUntil: Scalars['DateTimeISO']['input'];
  showParticipantsFrom: Scalars['DateTimeISO']['input'];
  showParticipantsUntil: Scalars['DateTimeISO']['input'];
  showPartnersFrom: Scalars['DateTimeISO']['input'];
  showPartnersUntil: Scalars['DateTimeISO']['input'];
  showSponsorsFrom: Scalars['DateTimeISO']['input'];
  showSponsorsUntil: Scalars['DateTimeISO']['input'];
  startsAt: Scalars['DateTimeISO']['input'];
  uid: Scalars['String']['input'];
};

export type SeasonWhereInput = {
  AND?: InputMaybe<Array<SeasonWhereInput>>;
  ApplicationCocktailType?: InputMaybe<ApplicationCocktailTypeListRelationFilter>;
  NOT?: InputMaybe<Array<SeasonWhereInput>>;
  OR?: InputMaybe<Array<SeasonWhereInput>>;
  applicationsEditableFrom?: InputMaybe<DateTimeFilter>;
  applicationsEditableUntil?: InputMaybe<DateTimeFilter>;
  applicationsFrom?: InputMaybe<DateTimeFilter>;
  applicationsUntil?: InputMaybe<DateTimeFilter>;
  calendar?: InputMaybe<CalendarItemListRelationFilter>;
  companies?: InputMaybe<CompanyApplicationListRelationFilter>;
  endsAt?: InputMaybe<DateTimeFilter>;
  eventFrom?: InputMaybe<DateTimeFilter>;
  eventUntil?: InputMaybe<DateTimeFilter>;
  feedbackFrom?: InputMaybe<DateTimeFilter>;
  feedbackUntil?: InputMaybe<DateTimeFilter>;
  gateGuardianLog?: InputMaybe<GateGuardianLogListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  partners?: InputMaybe<PartnerListRelationFilter>;
  scannedUsers?: InputMaybe<CompanyScannedUserListRelationFilter>;
  scheduleFrom?: InputMaybe<DateTimeFilter>;
  scheduleUntil?: InputMaybe<DateTimeFilter>;
  showParticipantsFrom?: InputMaybe<DateTimeFilter>;
  showParticipantsUntil?: InputMaybe<DateTimeFilter>;
  showPartnersFrom?: InputMaybe<DateTimeFilter>;
  showPartnersUntil?: InputMaybe<DateTimeFilter>;
  showSponsorsFrom?: InputMaybe<DateTimeFilter>;
  showSponsorsUntil?: InputMaybe<DateTimeFilter>;
  sponsors?: InputMaybe<SponsorListRelationFilter>;
  startsAt?: InputMaybe<DateTimeFilter>;
  uid?: InputMaybe<StringFilter>;
};

export type SeasonWhereUniqueInput = {
  AND?: InputMaybe<Array<SeasonWhereInput>>;
  ApplicationCocktailType?: InputMaybe<ApplicationCocktailTypeListRelationFilter>;
  NOT?: InputMaybe<Array<SeasonWhereInput>>;
  OR?: InputMaybe<Array<SeasonWhereInput>>;
  applicationsEditableFrom?: InputMaybe<DateTimeFilter>;
  applicationsEditableUntil?: InputMaybe<DateTimeFilter>;
  applicationsFrom?: InputMaybe<DateTimeFilter>;
  applicationsUntil?: InputMaybe<DateTimeFilter>;
  calendar?: InputMaybe<CalendarItemListRelationFilter>;
  companies?: InputMaybe<CompanyApplicationListRelationFilter>;
  endsAt?: InputMaybe<DateTimeFilter>;
  eventFrom?: InputMaybe<DateTimeFilter>;
  eventUntil?: InputMaybe<DateTimeFilter>;
  feedbackFrom?: InputMaybe<DateTimeFilter>;
  feedbackUntil?: InputMaybe<DateTimeFilter>;
  gateGuardianLog?: InputMaybe<GateGuardianLogListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  partners?: InputMaybe<PartnerListRelationFilter>;
  scannedUsers?: InputMaybe<CompanyScannedUserListRelationFilter>;
  scheduleFrom?: InputMaybe<DateTimeFilter>;
  scheduleUntil?: InputMaybe<DateTimeFilter>;
  showParticipantsFrom?: InputMaybe<DateTimeFilter>;
  showParticipantsUntil?: InputMaybe<DateTimeFilter>;
  showPartnersFrom?: InputMaybe<DateTimeFilter>;
  showPartnersUntil?: InputMaybe<DateTimeFilter>;
  showSponsorsFrom?: InputMaybe<DateTimeFilter>;
  showSponsorsUntil?: InputMaybe<DateTimeFilter>;
  sponsors?: InputMaybe<SponsorListRelationFilter>;
  startsAt?: InputMaybe<DateTimeFilter>;
  uid?: InputMaybe<Scalars['String']['input']>;
};

export type Session = {
  id: Scalars['Int']['output'];
  ip: Scalars['String']['output'];
  loggedInAt: Scalars['String']['output'];
  sessionId: Scalars['String']['output'];
  userAgent: Scalars['String']['output'];
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type SortOrderInput = {
  nulls?: InputMaybe<NullsOrder>;
  sort: SortOrder;
};

export type Sponsor = {
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  photo?: Maybe<Image>;
  uid: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type SponsorCreateInput = {
  name: Scalars['String']['input'];
  photo: Scalars['Upload']['input'];
  url: Scalars['String']['input'];
};

export type SponsorListRelationFilter = {
  every?: InputMaybe<SponsorWhereInput>;
  none?: InputMaybe<SponsorWhereInput>;
  some?: InputMaybe<SponsorWhereInput>;
};

export type SponsorOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SponsorWhereInput = {
  AND?: InputMaybe<Array<SponsorWhereInput>>;
  NOT?: InputMaybe<Array<SponsorWhereInput>>;
  OR?: InputMaybe<Array<SponsorWhereInput>>;
  forSeason?: InputMaybe<SeasonRelationFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  photo?: InputMaybe<ImageRelationFilter>;
  url?: InputMaybe<StringFilter>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type TalkCreateInput = {
  category: Scalars['String']['input'];
  descriptionEn: Scalars['String']['input'];
  descriptionHr: Scalars['String']['input'];
  language: Scalars['String']['input'];
  presenter: PresenterCreateInput;
  titleEn: Scalars['String']['input'];
  titleHr: Scalars['String']['input'];
};

export type TalksCreateInput = {
  category: Scalars['String']['input'];
  descriptionEn: Scalars['String']['input'];
  descriptionHr: Scalars['String']['input'];
  language: Scalars['String']['input'];
  presenter: Array<PresenterCreateInput>;
  titleEn: Scalars['String']['input'];
  titleHr: Scalars['String']['input'];
};

export type Translation = {
  createdAt: Scalars['DateTimeISO']['output'];
  key: Scalars['String']['output'];
  language: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
  value: Scalars['String']['output'];
};

export type TranslationCreateInput = {
  key: Scalars['String']['input'];
  language: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type TranslationKeyLanguageCompoundUniqueInput = {
  key: Scalars['String']['input'];
  language: Scalars['String']['input'];
};

export type TranslationOrderByWithRelationInput = {
  key?: InputMaybe<SortOrder>;
  language?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export enum TranslationScalarFieldEnum {
  CreatedAt = 'createdAt',
  Key = 'key',
  Language = 'language',
  UpdatedAt = 'updatedAt',
  Value = 'value'
}

export type TranslationWhereInput = {
  AND?: InputMaybe<Array<TranslationWhereInput>>;
  NOT?: InputMaybe<Array<TranslationWhereInput>>;
  OR?: InputMaybe<Array<TranslationWhereInput>>;
  key?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
};

export type TranslationWhereUniqueInput = {
  AND?: InputMaybe<Array<TranslationWhereInput>>;
  NOT?: InputMaybe<Array<TranslationWhereInput>>;
  OR?: InputMaybe<Array<TranslationWhereInput>>;
  key?: InputMaybe<StringFilter>;
  key_language?: InputMaybe<TranslationKeyLanguageCompoundUniqueInput>;
  language?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
};

export type UpdatePasswordResponse = {
  entity?: Maybe<User>;
  errors?: Maybe<Array<FieldError>>;
};

export type UpdateProfileResponse = {
  entity?: Maybe<User>;
  errors?: Maybe<Array<FieldError>>;
};

export type User = {
  _count?: Maybe<UserCount>;
  companies: Array<Company>;
  createdAt: Scalars['DateTimeISO']['output'];
  email: Scalars['String']['output'];
  eventLog: Array<EventLog>;
  firstName: Scalars['String']['output'];
  language: Scalars['String']['output'];
  lastName: Scalars['String']['output'];
  name: Scalars['String']['output'];
  phone: Scalars['String']['output'];
  resume?: Maybe<Resume>;
  roles: Array<Role>;
  uid: Scalars['String']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type UserCompanyComponentRating = {
  comment?: Maybe<Scalars['String']['output']>;
  component: Scalars['String']['output'];
  createdAt: Scalars['DateTimeISO']['output'];
  forCompany: Company;
  forSeason: Season;
  forUser: User;
  rating: Scalars['Int']['output'];
  updatedAt: Scalars['DateTimeISO']['output'];
};

export type UserCompanyComponentRatingAveragesViewWhereInput = {
  AND?: InputMaybe<Array<UserCompanyComponentRatingAveragesViewWhereInput>>;
  NOT?: InputMaybe<Array<UserCompanyComponentRatingAveragesViewWhereInput>>;
  OR?: InputMaybe<Array<UserCompanyComponentRatingAveragesViewWhereInput>>;
  component?: InputMaybe<StringFilter>;
  ratingAvg?: InputMaybe<FloatFilter>;
  ratingCount?: InputMaybe<IntFilter>;
};

export type UserCompanyComponentRatingComponentAverage = {
  averageRating: Scalars['Float']['output'];
  comments: Array<Scalars['String']['output']>;
  component: Scalars['String']['output'];
  ratingCount?: Maybe<Scalars['Int']['output']>;
};

export type UserCompanyComponentRatingWhereInput = {
  AND?: InputMaybe<Array<UserCompanyComponentRatingWhereInput>>;
  NOT?: InputMaybe<Array<UserCompanyComponentRatingWhereInput>>;
  OR?: InputMaybe<Array<UserCompanyComponentRatingWhereInput>>;
  comment?: InputMaybe<StringNullableFilter>;
  component?: InputMaybe<StringFilter>;
  rating?: InputMaybe<IntFilter>;
};

export type UserCount = {
  LiveVote: Scalars['Int']['output'];
  LiveVoteComment: Scalars['Int']['output'];
  News: Scalars['Int']['output'];
  UserCompanyComponentRatings: Scalars['Int']['output'];
  companies: Scalars['Int']['output'];
  events: Scalars['Int']['output'];
  files: Scalars['Int']['output'];
  gateGuardianEntryLog: Scalars['Int']['output'];
  gateGuardianScannedLog: Scalars['Int']['output'];
  images: Scalars['Int']['output'];
  passwordResets: Scalars['Int']['output'];
  pressReleases: Scalars['Int']['output'];
  reservations: Scalars['Int']['output'];
  roles: Scalars['Int']['output'];
  scannedEntries: Scalars['Int']['output'];
  scannedUsers: Scalars['Int']['output'];
};


export type UserCountLiveVoteArgs = {
  where?: InputMaybe<LiveVoteWhereInput>;
};


export type UserCountLiveVoteCommentArgs = {
  where?: InputMaybe<LiveVoteCommentWhereInput>;
};


export type UserCountNewsArgs = {
  where?: InputMaybe<NewsWhereInput>;
};


export type UserCountUserCompanyComponentRatingsArgs = {
  where?: InputMaybe<UserCompanyComponentRatingWhereInput>;
};


export type UserCountCompaniesArgs = {
  where?: InputMaybe<CompanyWhereInput>;
};


export type UserCountEventsArgs = {
  where?: InputMaybe<EventLogWhereInput>;
};


export type UserCountFilesArgs = {
  where?: InputMaybe<FileWhereInput>;
};


export type UserCountGateGuardianEntryLogArgs = {
  where?: InputMaybe<GateGuardianLogWhereInput>;
};


export type UserCountGateGuardianScannedLogArgs = {
  where?: InputMaybe<GateGuardianLogWhereInput>;
};


export type UserCountImagesArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type UserCountPasswordResetsArgs = {
  where?: InputMaybe<PasswordResetWhereInput>;
};


export type UserCountPressReleasesArgs = {
  where?: InputMaybe<PressReleaseWhereInput>;
};


export type UserCountReservationsArgs = {
  where?: InputMaybe<EventReservationWhereInput>;
};


export type UserCountRolesArgs = {
  where?: InputMaybe<RoleWhereInput>;
};


export type UserCountScannedEntriesArgs = {
  where?: InputMaybe<EntryResumeLogWhereInput>;
};


export type UserCountScannedUsersArgs = {
  where?: InputMaybe<CompanyScannedUserWhereInput>;
};

export type UserCreateInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  language?: InputMaybe<Scalars['String']['input']>;
  lastName: Scalars['String']['input'];
  password: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

export type UserNullableRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export type UserOrderByWithRelationInput = {
  email?: InputMaybe<SortOrder>;
  firstName?: InputMaybe<SortOrder>;
  language?: InputMaybe<SortOrder>;
  lastName?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
};

export type UserRegisterInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  language?: InputMaybe<Scalars['String']['input']>;
  lastName: Scalars['String']['input'];
  password: Scalars['String']['input'];
  passwordRepeat: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

export type UserRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export enum UserScalarFieldEnum {
  CreatedAt = 'createdAt',
  Email = 'email',
  FirstName = 'firstName',
  Id = 'id',
  Language = 'language',
  LastName = 'lastName',
  Password = 'password',
  Phone = 'phone',
  ResumeId = 'resumeId',
  Uid = 'uid',
  UpdatedAt = 'updatedAt'
}

export type UserUpdateInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  language?: InputMaybe<Scalars['String']['input']>;
  lastName: Scalars['String']['input'];
  password: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  roles: Array<Scalars['String']['input']>;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<UserWhereInput>>;
  NOT?: InputMaybe<Array<UserWhereInput>>;
  OR?: InputMaybe<Array<UserWhereInput>>;
  email?: InputMaybe<StringFilter>;
  firstName?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  lastName?: InputMaybe<StringFilter>;
  password?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringFilter>;
};

export type UserWhereUniqueInput = {
  AND?: InputMaybe<Array<UserWhereInput>>;
  NOT?: InputMaybe<Array<UserWhereInput>>;
  OR?: InputMaybe<Array<UserWhereInput>>;
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<StringFilter>;
  language?: InputMaybe<StringFilter>;
  lastName?: InputMaybe<StringFilter>;
  password?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringFilter>;
};

export type ValidateVatResponse = {
  exists: Scalars['Boolean']['output'];
  info?: Maybe<VatData>;
  valid: Scalars['Boolean']['output'];
};

export type VatData = {
  address: Scalars['String']['output'];
  legalName: Scalars['String']['output'];
  vat: Scalars['String']['output'];
};

export type WorkshopCreateInput = {
  descriptionEn: Scalars['String']['input'];
  descriptionHr: Scalars['String']['input'];
  goal: Scalars['String']['input'];
  language: Scalars['String']['input'];
  notesEn: Scalars['String']['input'];
  notesHr: Scalars['String']['input'];
  presenter: PresenterCreateInput;
  titleEn: Scalars['String']['input'];
  titleHr: Scalars['String']['input'];
};

export type WorkshopsCreateInput = {
  descriptionEn: Scalars['String']['input'];
  descriptionHr: Scalars['String']['input'];
  goal: Scalars['String']['input'];
  language: Scalars['String']['input'];
  notesEn: Scalars['String']['input'];
  notesHr: Scalars['String']['input'];
  presenter: Array<PresenterCreateInput>;
  titleEn: Scalars['String']['input'];
  titleHr: Scalars['String']['input'];
};

export type ComponentAdminSeasonRatingsCompaniesCompanyComments_DataQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  companyUid: Scalars['String']['input'];
}>;


export type ComponentAdminSeasonRatingsCompaniesCompanyComments_DataQuery = { companyComponentAverageRatings: Array<{ component: string, averageRating: number, comments: Array<string> }> };

export type LoginMutationVariables = Exact<{
  password: Scalars['String']['input'];
  identifier: Scalars['String']['input'];
}>;


export type LoginMutation = { login: { errors?: Array<{ field: string, message: string }> | null, entity?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null } };

export type RegisterMutationVariables = Exact<{
  info: UserRegisterInput;
}>;


export type RegisterMutation = { register: { errors?: Array<{ field: string, message: string }> | null, entity?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null } };

export type LogoutMutationVariables = Exact<{ [key: string]: never; }>;


export type LogoutMutation = { logout: boolean };

export type RequestPasswordResetMutationVariables = Exact<{
  identifier: Scalars['String']['input'];
}>;


export type RequestPasswordResetMutation = { requestPasswordReset: string };

export type CheckPasswordResetMutationVariables = Exact<{
  token: Scalars['String']['input'];
}>;


export type CheckPasswordResetMutation = { checkPasswordReset?: { firstName: string, lastName: string, email: string } | null };

export type UsePasswordResetMutationVariables = Exact<{
  info: PasswordResetUseInput;
}>;


export type UsePasswordResetMutation = { usePasswordReset: { entity?: boolean | null, errors?: Array<{ field: string, message: string }> | null } };

export type RequestPasswordResetForMutationVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type RequestPasswordResetForMutation = { requestPasswordResetFor: string };

export type UpdateTranslationMutationVariables = Exact<{
  data: TranslationCreateInput;
}>;


export type UpdateTranslationMutation = { updateTranslation?: { key: string, value: string, language: string } | null };

export type UpdateProfileMutationVariables = Exact<{
  info: UserCreateInput;
}>;


export type UpdateProfileMutation = { updateProfile?: { errors?: Array<{ field: string, message: string }> | null, entity?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null } | null };

export type UpdateUserMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  info: UserUpdateInput;
}>;


export type UpdateUserMutation = { updateUser?: { errors?: Array<{ field: string, message: string }> | null, entity?: { uid: string } | null } | null };

export type UpdatePasswordMutationVariables = Exact<{
  currentPassword: Scalars['String']['input'];
  newPassword: Scalars['String']['input'];
  newPasswordRepeat: Scalars['String']['input'];
}>;


export type UpdatePasswordMutation = { updatePassword?: { errors?: Array<{ field: string, message: string }> | null, entity?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null } | null };

export type ValidateVatMutationVariables = Exact<{
  vat: Scalars['String']['input'];
}>;


export type ValidateVatMutation = { validateVat: { valid: boolean, exists: boolean, info?: { address: string, legalName: string, vat: string } | null } };

export type CreateIndustryMutationVariables = Exact<{
  name: Scalars['String']['input'];
}>;


export type CreateIndustryMutation = { createIndustry?: { name: string } | null };

export type RenameIndustryMutationVariables = Exact<{
  oldName: Scalars['String']['input'];
  newName: Scalars['String']['input'];
}>;


export type RenameIndustryMutation = { renameIndustry?: { name: string } | null };

export type CreateTalkCategoryMutationVariables = Exact<{
  name: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type CreateTalkCategoryMutation = { createTalkCategory?: { name: string } | null };

export type RenameTalkCategoryMutationVariables = Exact<{
  oldName: Scalars['String']['input'];
  newName: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type RenameTalkCategoryMutation = { renameTalkCategory?: { name: string } | null };

export type CreateCocktailTypeMutationVariables = Exact<{
  type: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type CreateCocktailTypeMutation = { createCocktailType?: { type: string } | null };

export type RenameCocktailTypeMutationVariables = Exact<{
  oldCocktailType: Scalars['String']['input'];
  newCocktailType: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type RenameCocktailTypeMutation = { renameCocktailType: { type: string } };

export type RegisterCompanyMutationVariables = Exact<{
  info: CreateCompanyInput;
}>;


export type RegisterCompanyMutation = { registerCompany?: { errors?: Array<{ message: string, field: string }> | null, entity?: { uid: string, vat: string, legalName: string, address: string, brandName: string, descriptionEn: string, descriptionHr: string, industry?: { name: string } | null } | null } | null };

export type UpdateCompanyInfoMutationVariables = Exact<{
  info: CreateCompanyInput;
}>;


export type UpdateCompanyInfoMutation = { updateCompanyInfo?: { errors?: Array<{ message: string, field: string }> | null, entity?: { uid: string, vat: string, legalName: string, address: string, brandName: string, descriptionEn: string, descriptionHr: string, industry?: { name: string } | null } | null } | null };

export type CreatePressReleaseMutationVariables = Exact<{
  info: PressReleaseWithFilesCreateInput;
}>;


export type CreatePressReleaseMutation = { createPressRelease?: { entity?: { title: string, published: string | Date } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type UpdatePressReleaseMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  info: PressReleaseWithFilesCreateInput;
}>;


export type UpdatePressReleaseMutation = { updatePressRelease?: { entity?: { title: string, published: string | Date } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type EditApprovedCompanyApplicationMutationVariables = Exact<{
  info: CompanyApplicationApprovedEditInput;
}>;


export type EditApprovedCompanyApplicationMutation = { editApprovedCompanyApplication?: { entity?: { talk?: { uid: string } | null, workshop?: { uid: string } | null } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type UpdateResumeMutationVariables = Exact<{
  info: ResumeCreateInput;
}>;


export type UpdateResumeMutation = { updateResume?: { errors?: Array<{ field: string, message: string }> | null, entity?: { uid: string } | null } | null };

export type CreateNewsMutationVariables = Exact<{
  info: NewsCreateInput;
}>;


export type CreateNewsMutation = { createNews?: { errors?: Array<{ field: string, message: string }> | null, entity?: { uid: string, slug: string } | null } | null };

export type EditNewsMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  info: NewsCreateInput;
}>;


export type EditNewsMutation = { editNews?: { errors?: Array<{ field: string, message: string }> | null, entity?: (
      { uid: string }
      & { ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }
    ) | null } | null };

export type DeleteNewsMutationVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type DeleteNewsMutation = { deleteNews?: boolean | null };

export type CreateGalleryImageMutationVariables = Exact<{
  info: GalleryImageCreateInput;
}>;


export type CreateGalleryImageMutation = { createGalleryImage?: { errors?: Array<{ field: string, message: string }> | null, entity?: { uid: string } | null } | null };

export type EditGalleryImageMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  info: GalleryImageCreateInput;
}>;


export type EditGalleryImageMutation = { editGalleryImage?: { errors?: Array<{ field: string, message: string }> | null, entity?: (
      { uid: string }
      & { ' $fragmentRefs'?: { 'Frag_GalleryImageFragment': Frag_GalleryImageFragment } }
    ) | null } | null };

export type DeleteGalleryImageMutationVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type DeleteGalleryImageMutation = { deleteGalleryImage: boolean };

export type Frag_SeasonFragment = { uid: string, name: string, startsAt: string | Date, endsAt: string | Date, applicationsFrom: string | Date, applicationsUntil: string | Date, applicationsEditableFrom: string | Date, applicationsEditableUntil: string | Date, showParticipantsFrom: string | Date, showParticipantsUntil: string | Date, showPartnersFrom: string | Date, showPartnersUntil: string | Date, showSponsorsFrom: string | Date, showSponsorsUntil: string | Date, eventFrom: string | Date, eventUntil: string | Date, feedbackFrom: string | Date, feedbackUntil: string | Date, scheduleFrom: string | Date, scheduleUntil: string | Date } & { ' $fragmentName'?: 'Frag_SeasonFragment' };

export type Frag_UserProfileFragment = { uid: string, name: string, firstName: string, lastName: string, email: string, phone: string, language: string, roles: Array<{ name: string }>, companies: Array<{ uid: string, vat: string, legalName: string, brandName: string, address: string, website: string, instagram?: string | null, facebook?: string | null, linkedIn?: string | null, descriptionEn: string, descriptionHr: string, industry?: { name: string } | null }> } & { ' $fragmentName'?: 'Frag_UserProfileFragment' };

export type Frag_ApplicationPresenterFragment = { firstName: string, lastName: string, bioHr: string, bioEn: string, photo?: { name: string, uid: string, full: { mimeType: string } } | null } & { ' $fragmentName'?: 'Frag_ApplicationPresenterFragment' };

export type Frag_AllFeedbackFragment = { applicationComments: string, applicationRating: number, attendanceRating: number, dateComments: string, dateRating: number, experienceComments: string, foodRating: number, mostLiked: number, onsiteRating: number, overallComment: string, overallRating: number, recommended: number, testimonial: string, timeRating: number, createdAt: string | Date, updatedAt: string | Date } & { ' $fragmentName'?: 'Frag_AllFeedbackFragment' };

export type Frag_CompanyApplicationFragment = { booth?: string | null, wantsPanel: boolean, wantsCocktail: boolean, contactPerson?: { name: string, email: string, phone: string } | null, talk?: { titleEn: string, titleHr: string, descriptionEn: string, descriptionHr: string, language: string, category: { name: string }, presenters: Array<{ ' $fragmentRefs'?: { 'Frag_ApplicationPresenterFragment': Frag_ApplicationPresenterFragment } }> } | null, workshop?: { titleEn: string, titleHr: string, descriptionEn: string, descriptionHr: string, language: string, goal: string, notesEn: string, notesHr: string, presenters: Array<{ ' $fragmentRefs'?: { 'Frag_ApplicationPresenterFragment': Frag_ApplicationPresenterFragment } }> } | null, cocktail?: { name: string, type: { type: string } } | null, internship?: { ' $fragmentRefs'?: { 'Frag_InternshipFragment': Frag_InternshipFragment } } | null, panelParticipants: Array<{ ' $fragmentRefs'?: { 'Frag_ApplicationPresenterFragment': Frag_ApplicationPresenterFragment } }>, approval?: { cocktail: boolean, panel: boolean, talkParticipants: number, workshopParticipants: number, booth: boolean } | null, feedback?: { ' $fragmentRefs'?: { 'Frag_AllFeedbackFragment': Frag_AllFeedbackFragment } } | null } & { ' $fragmentName'?: 'Frag_CompanyApplicationFragment' };

export type Frag_CompanyFragment = { uid: string, legalName: string, brandName: string, descriptionEn: string, descriptionHr: string, address: string, vat: string, website: string, instagram?: string | null, facebook?: string | null, linkedIn?: string | null, industry?: { name: string } | null } & { ' $fragmentName'?: 'Frag_CompanyFragment' };

export type Frag_NewsFragment = { lang: string, slug: string, date: string | Date, title: string, description: string, content: string, photo?: { thumbUrl: string, fullUrl: string } | null } & { ' $fragmentName'?: 'Frag_NewsFragment' };

export type Frag_GalleryImageFragment = { uid: string, name: string, order: number, visible: boolean, photo?: { thumbUrl: string, fullUrl: string } | null } & { ' $fragmentName'?: 'Frag_GalleryImageFragment' };

export type Frag_InternshipFragment = { uid: string, position: string, competencies: string, description: string, workingPeriodStart: string | Date, workingPeriodEnd: string | Date, url: string, duration: string, company?: { uid: string, brandName: string, rasterLogo?: { fullUrl: string, thumbUrl: string } | null } | null } & { ' $fragmentName'?: 'Frag_InternshipFragment' };

export type ProfileQueryVariables = Exact<{ [key: string]: never; }>;


export type ProfileQuery = { profile?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null };

export type TranslationsForQueryVariables = Exact<{
  language: Scalars['String']['input'];
}>;


export type TranslationsForQuery = { allTranslationsFor: Array<{ key: string, value: string }> };

export type InitialDataQueryVariables = Exact<{
  language: Scalars['String']['input'];
}>;


export type InitialDataQuery = { profile?: { ' $fragmentRefs'?: { 'Frag_UserProfileFragment': Frag_UserProfileFragment } } | null, allTranslationsFor: Array<{ key: string, value: string }>, currentSeason?: { ' $fragmentRefs'?: { 'Frag_SeasonFragment': Frag_SeasonFragment } } | null };

export type PageIndexDataQueryVariables = Exact<{
  language: Scalars['String']['input'];
}>;


export type PageIndexDataQuery = { sponsors: Array<{ name: string, url: string, photo?: { thumbUrl: string, fullUrl: string } | null }>, partners: Array<{ name: string, url: string, photo?: { thumbUrl: string, fullUrl: string } | null }>, news: Array<{ ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }>, galleryImages: Array<{ ' $fragmentRefs'?: { 'Frag_GalleryImageFragment': Frag_GalleryImageFragment } }> };

export type CompanyQueryVariables = Exact<{
  vat: Scalars['String']['input'];
}>;


export type CompanyQuery = { company?: { ' $fragmentRefs'?: { 'Frag_CompanyFragment': Frag_CompanyFragment } } | null };

export type CompanyInfoQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type CompanyInfoQuery = { companyInfo?: { uid: string, brandName: string, descriptionEn: string, descriptionHr: string, website: string, instagram?: string | null, facebook?: string | null, linkedIn?: string | null, rasterLogo?: { thumbUrl: string, fullUrl: string } | null, program?: { booth?: string | null, talk?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, language: string, reservation: number, presenters: Array<{ bioHr: string, bioEn: string, firstName: string, lastName: string, photo?: { thumbUrl: string, fullUrl: string } | null }>, event?: { start: string | Date, end: string | Date, location?: string | null } | null } | null, workshop?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, language: string, notesHr: string, notesEn: string, reservation: number, presenters: Array<{ firstName: string, lastName: string, bioHr: string, bioEn: string, photo?: { thumbUrl: string, fullUrl: string } | null }>, event?: { start: string | Date, end: string | Date, location?: string | null } | null } | null, panelParticipants: Array<{ firstName: string, lastName: string, bioHr: string, bioEn: string, photo?: { thumbUrl: string, fullUrl: string } | null }>, panel?: { uid: string, name: string, description: string, reservation: number, companies: Array<{ uid: string, brandName: string, rasterLogo?: { thumbUrl: string, fullUrl: string } | null }>, event?: { start: string | Date, end: string | Date, location?: string | null } | null } | null, internship?: { ' $fragmentRefs'?: { 'Frag_InternshipFragment': Frag_InternshipFragment } } | null } | null } | null };

export type IndustriesQueryVariables = Exact<{ [key: string]: never; }>;


export type IndustriesQuery = { industries: Array<{ name: string }> };

export type TalkCategoriesQueryVariables = Exact<{
  season?: InputMaybe<Scalars['String']['input']>;
}>;


export type TalkCategoriesQuery = { talkCategories: Array<{ name: string }> };

export type CocktailTypesQueryVariables = Exact<{
  season?: InputMaybe<Scalars['String']['input']>;
}>;


export type CocktailTypesQuery = { cocktailTypes: Array<{ type: string }> };

export type AvailableCocktailTypesQueryVariables = Exact<{
  season?: InputMaybe<Scalars['String']['input']>;
}>;


export type AvailableCocktailTypesQuery = { availableCocktailTypes: Array<{ type: string }> };

export type PressReleaseQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type PressReleaseQuery = { pressRelease?: { title: string, published: string | Date, file?: { name: string, mimeType: string, uid: string } | null, forSeason?: { uid: string, name: string } | null } | null };

export type PressReleasesQueryVariables = Exact<{
  season?: InputMaybe<Scalars['String']['input']>;
}>;


export type PressReleasesQuery = { pressReleases: Array<{ uid: string, title: string, published: string | Date, file?: { uid: string } | null, forSeason?: { uid: string, name: string } | null }> };

export type AllNewsQueryVariables = Exact<{
  filter?: InputMaybe<NewsFilter>;
}>;


export type AllNewsQuery = { allNews: Array<(
    { uid: string }
    & { ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }
  )> };

export type NewsQueryVariables = Exact<{
  lang: Scalars['String']['input'];
  filter?: InputMaybe<NewsFilter>;
}>;


export type NewsQuery = { news: Array<{ ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }> };

export type NewsItemQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  lang: Scalars['String']['input'];
  filter?: InputMaybe<NewsFilter>;
}>;


export type NewsItemQuery = { newsItem?: { ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } } | null, news: Array<{ ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }> };

export type NewsItemByUidQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type NewsItemByUidQuery = { newsItemByUid?: (
    { uid: string, photo?: { uid: string, name: string, full: { mimeType: string } } | null }
    & { ' $fragmentRefs'?: { 'Frag_NewsFragment': Frag_NewsFragment } }
  ) | null };

export type GalleryImagesQueryVariables = Exact<{
  filter?: InputMaybe<GalleryImageFilter>;
}>;


export type GalleryImagesQuery = { galleryImages: Array<{ ' $fragmentRefs'?: { 'Frag_GalleryImageFragment': Frag_GalleryImageFragment } }> };

export type AllGalleryImagesQueryVariables = Exact<{ [key: string]: never; }>;


export type AllGalleryImagesQuery = { allGalleryImages: Array<(
    { uid: string, photo?: { uid: string, name: string, full: { mimeType: string } } | null }
    & { ' $fragmentRefs'?: { 'Frag_GalleryImageFragment': Frag_GalleryImageFragment } }
  )> };

export type InternshipsQueryVariables = Exact<{ [key: string]: never; }>;


export type InternshipsQuery = { internships: Array<{ ' $fragmentRefs'?: { 'Frag_InternshipFragment': Frag_InternshipFragment } }> };

export type GalleryImagItemByUidQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type GalleryImagItemByUidQuery = { galleryImageItemByUid?: (
    { uid: string, photo?: { uid: string, name: string, full: { mimeType: string } } | null }
    & { ' $fragmentRefs'?: { 'Frag_GalleryImageFragment': Frag_GalleryImageFragment } }
  ) | null };

export type AdminInitialDataQueryVariables = Exact<{ [key: string]: never; }>;


export type AdminInitialDataQuery = { industries: Array<{ name: string }>, seasons: Array<{ ' $fragmentRefs'?: { 'Frag_SeasonFragment': Frag_SeasonFragment } }> };

export type AdminCompanyApplicationQueryVariables = Exact<{
  company: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type AdminCompanyApplicationQuery = { talkCategories: Array<{ name: string }>, booths: Array<{ name: string, key?: string | null }>, companyApplicationFor?: (
    { forCompany?: { ' $fragmentRefs'?: { 'Frag_CompanyFragment': Frag_CompanyFragment } } | null }
    & { ' $fragmentRefs'?: { 'Frag_CompanyApplicationFragment': Frag_CompanyApplicationFragment } }
  ) | null };

export type AdminCompanyApplicationsQueryVariables = Exact<{
  season: Scalars['String']['input'];
}>;


export type AdminCompanyApplicationsQuery = { industries: Array<{ name: string }>, talkCategories: Array<{ name: string }>, booths: Array<{ key?: string | null, name: string }>, companyApplications?: Array<{ wantsCocktail: boolean, wantsPanel: boolean, booth?: string | null, talk?: { language: string, titleEn: string, category: { name: string } } | null, cocktail?: { name: string, type: { type: string } } | null, workshop?: { language: string, titleEn: string } | null, forCompany?: { uid: string, brandName: string, industry?: { name: string } | null } | null, forSeason?: { uid: string } | null }> | null };

export type CurrentCompanyApplicationQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentCompanyApplicationQuery = { talkCategories: Array<{ name: string }>, availableCocktailTypes: Array<{ type: string }>, booths: Array<{ name: string, key?: string | null }>, companyApplication?: { ' $fragmentRefs'?: { 'Frag_CompanyApplicationFragment': Frag_CompanyApplicationFragment } } | null };

export type MyResumeQueryVariables = Exact<{ [key: string]: never; }>;


export type MyResumeQuery = { profile?: { resume?: { uid: string, updatedAt: string | Date, city: string, interests: Array<string>, technologies: Array<string>, extraField: string, cv?: { url: string, name: string, mimeType: string } | null, faculty?: { name: string, module: string, specialization: string } | null, projects: Array<{ project: string, position: string, start: string | Date, until?: string | Date | null }>, volunteerExperiences: Array<{ organisation: string, position: string, start: string | Date, until?: string | Date | null }>, workExperiences: Array<{ company: string, position: string, start: string | Date, until?: string | Date | null }>, studyYears: Array<{ studyType: string, studyYear: number }> } | null } | null };

export type ResumeQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type ResumeQuery = { resumeIsFavourite: boolean, resume?: { uid: string, technologies: Array<string>, interests: Array<string>, city: string, extraField: string, faculty?: { name: string, module: string } | null, user: { name: string, email: string, phone: string }, studyYears: Array<{ studyYear: number, studyType: string }>, projects: Array<{ project: string, position: string, start: string | Date, until?: string | Date | null }>, cv?: { url: string } | null, volunteerExperiences: Array<{ organisation: string, position: string, start: string | Date, until?: string | Date | null }>, workExperiences: Array<{ company: string, position: string, start: string | Date, until?: string | Date | null }> } | null };

export type ProfileBaseDataQueryVariables = Exact<{ [key: string]: never; }>;


export type ProfileBaseDataQuery = { booths: Array<{ key?: string | null, name: string }>, companyApplication?: { booth?: string | null, wantsPanel: boolean, wantsCocktail: boolean, workshop?: { titleEn: string } | null, talk?: { titleEn: string } | null, approval?: { booth: boolean, workshopParticipants: number, talkParticipants: number, panel: boolean, cocktail: boolean } | null, userApplications: { workshop: number, talk: number }, internship?: { position: string } | null } | null, profile?: { resume?: { uid: string } | null } | null, calendar: Array<{ uid: string, title?: string | null, forWorkshop?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, reservation: number } | null, forTalk?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, reservation: number } | null, forPanel?: { uid: string, name: string, description: string, reservation: number } | null }>, currentSeason?: (
    { companyComponentAverageRatings: Array<{ component: string, averageRating: number }> }
    & { ' $fragmentRefs'?: { 'Frag_SeasonFragment': Frag_SeasonFragment } }
  ) | null };

export type AdminFeedbackInfoQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type AdminFeedbackInfoQuery = { companyApplications?: Array<{ forCompany?: { uid: string, brandName: string } | null, feedback?: { ' $fragmentRefs'?: { 'Frag_AllFeedbackFragment': Frag_AllFeedbackFragment } } | null }> | null };

export type PageAdminSeasonScheduleBaseQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type PageAdminSeasonScheduleBaseQuery = { participants: Array<{ uid: string, brandName: string, program?: { talk?: { uid: string, event?: { uid: string, type?: string | null, title?: string | null, start: string | Date, end: string | Date, location?: string | null, text?: string | null, grouped: boolean } | null } | null, workshop?: { uid: string, event?: { uid: string, type?: string | null, title?: string | null, start: string | Date, end: string | Date, location?: string | null, text?: string | null, grouped: boolean } | null } | null, panelParticipants: Array<{ firstName: string, lastName: string, photo?: { fullUrl: string, thumbUrl: string } | null }> } | null }>, season?: { panel?: { uid: string, name: string, description: string, companies: Array<{ uid: string }>, event?: { uid: string, type?: string | null, title?: string | null, start: string | Date, end: string | Date, location?: string | null, text?: string | null, grouped: boolean } | null } | null, calendar: Array<{ uid: string, type?: string | null, title?: string | null, start: string | Date, end: string | Date, location?: string | null, text?: string | null, grouped: boolean }> } | null };

export type AdminReservationsDataQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type AdminReservationsDataQuery = { season?: { reservations: Array<{ uid: string, type: string, count: number }> } | null, participants: Array<{ uid: string, vat: string, brandName: string, program?: { workshop?: { uid: string, titleHr: string } | null, talk?: { uid: string, titleHr: string } | null, panel?: { uid: string, name: string } | null } | null }> };

export type PageScheduleBaseQueryVariables = Exact<{ [key: string]: never; }>;


export type PageScheduleBaseQuery = { calendar: Array<{ uid: string, title?: string | null, text?: string | null, start: string | Date, end: string | Date, type?: string | null, grouped: boolean, location?: string | null, hasEvent: boolean }> };

export type PageAdminUserEditBaseQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type PageAdminUserEditBaseQuery = { user?: { uid: string, name: string, firstName: string, lastName: string, email: string, phone: string, roles: Array<{ name: string }>, eventLog: Array<{ id: number, date: string | Date, name: string, data?: string | null }> } | null, roles: Array<{ name: string }>, sessionsFor: Array<{ sessionId: string, ip: string, userAgent: string, loggedInAt: string }> };

export type PageAdminSeasonSeasonDataQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type PageAdminSeasonSeasonDataQuery = { season?: { uid: string, name: string, startsAt: string | Date, endsAt: string | Date, applicationsFrom: string | Date, applicationsUntil: string | Date } | null };

export type PageAdminSeasonApplicationsCompanyEdit_DeleteApplicationMutationVariables = Exact<{
  company: Scalars['String']['input'];
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonApplicationsCompanyEdit_DeleteApplicationMutation = { deleteCompanyApplicationFor: boolean };

export type PageAdminSeasonApplicationsCompanyEdit_UpsertApplicationMutationVariables = Exact<{
  company: Scalars['String']['input'];
  season: Scalars['String']['input'];
  info: CompanyApplicationCreateInput;
}>;


export type PageAdminSeasonApplicationsCompanyEdit_UpsertApplicationMutation = { createCompanyApplicationFor?: { entity?: { wantsCocktail: boolean, wantsPanel: boolean, talk?: { uid: string } | null, workshop?: { uid: string } | null } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type PageAdminSeasonApplicationsApproval_BaseQueryVariables = Exact<{
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonApplicationsApproval_BaseQuery = { season?: { name: string, startsAt: string | Date, endsAt: string | Date, applications: Array<{ wantsPanel: boolean, wantsCocktail: boolean, booth?: string | null, talk?: { titleEn: string, titleHr: string } | null, workshop?: { titleEn: string, titleHr: string } | null, forCompany?: { uid: string, legalName: string, brandName: string } | null, approval?: { booth: boolean, talkParticipants: number, workshopParticipants: number, panel: boolean, cocktail: boolean, logoHidden: boolean } | null }> } | null };

export type PageAdminSeasonApplicationsApproval_ApproveCompanyApplicationsMutationVariables = Exact<{
  companies: Array<ApproveCompanyApplicationsInput> | ApproveCompanyApplicationsInput;
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonApplicationsApproval_ApproveCompanyApplicationsMutation = { approveCompanyApplications: Array<{ booth: boolean, talkParticipants: number, workshopParticipants: number, panel: boolean, cocktail: boolean, forApplication: { forCompany?: { uid: string } | null } }> };

export type PageAdminSeasonLiveVoteResults_DataQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type PageAdminSeasonLiveVoteResults_DataQuery = { liveVoteResults: Array<{ option: string, voteCount: number }>, liveVoteComments: Array<{ id: number, comment: string, createdAt: string | Date, forUser: { name: string } }> };

export type PageAdminSeasonLiveVoteResults_DeleteCommentMutationVariables = Exact<{
  commentId: Scalars['Int']['input'];
}>;


export type PageAdminSeasonLiveVoteResults_DeleteCommentMutation = { deleteLiveVoteComment: boolean };

export type PageAdminSeasonRatingsCompanies_DataQueryVariables = Exact<{
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonRatingsCompanies_DataQuery = { season?: { applications: Array<{ forCompany?: { uid: string, legalName: string, brandName: string, ratings: Array<{ averageRating: number, component: string }> } | null }> } | null };

export type PageAdminSeasonRatingsQrCodesDataQueryVariables = Exact<{
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonRatingsQrCodesDataQuery = { season?: { name: string, startsAt: string | Date, endsAt: string | Date, applications: Array<{ forCompany?: { uid: string, legalName: string, brandName: string } | null, approval?: { booth: boolean, talkParticipants: number, workshopParticipants: number, panel: boolean } | null }> } | null };

export type PageAdminSeasonReservationsScannedDataQueryVariables = Exact<{
  season: Scalars['String']['input'];
}>;


export type PageAdminSeasonReservationsScannedDataQuery = { gateGuardianScanList?: Array<{ eventType: string, eventId: number, scannedAt: string | Date, forUser?: { uid: string, name: string, email: string, phone: string } | null, scannedBy?: { uid: string, name: string } | null, forCalendarItem?: { uid: string, companies?: Array<{ uid: string, brandName: string }> | null, forTalk?: { uid: string, titleHr: string, titleEn: string } | null, forWorkshop?: { uid: string, titleHr: string, titleEn: string } | null, forPanel?: { uid: string, name: string } | null } | null }> | null };

export type PageAdminUsersScannersQueryVariables = Exact<{ [key: string]: never; }>;


export type PageAdminUsersScannersQuery = { users: Array<{ uid: string, name: string, email: string, roles: Array<{ name: string }> }> };

export type PageAdminUsersScannersUpdateIsScannerMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  isScanner: Scalars['Boolean']['input'];
}>;


export type PageAdminUsersScannersUpdateIsScannerMutation = { updateScannerStatusFor: boolean };

export type PageCalendarEventDataQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type PageCalendarEventDataQuery = { calendarItemCompanyUid?: string | null, calendarItem?: { hasEvent: boolean, type?: string | null } | null };

export type PageCompanyUidRate_DataQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
}>;


export type PageCompanyUidRate_DataQuery = { userCompanyComponentRating?: { rating: number, comment?: string | null } | null, currentSeason?: { eventFrom: string | Date, eventUntil: string | Date } | null };

export type PageCompanyUidRate_UpsertMutationVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
  rating: Scalars['Int']['input'];
  comment?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageCompanyUidRate_UpsertMutation = { upsertUserCompanyComponentRating: { rating: number, comment?: string | null } };

export type PageCompanyUidRate_DeleteMutationVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  companyUid: Scalars['String']['input'];
  component: Scalars['String']['input'];
}>;


export type PageCompanyUidRate_DeleteMutation = { deleteUserCompanyComponentRating: boolean };

export type PageGateGuardian_ScanMutationVariables = Exact<{
  userUid: Scalars['String']['input'];
  eventUid: Scalars['String']['input'];
  eventType: Scalars['String']['input'];
}>;


export type PageGateGuardian_ScanMutation = { gateGuardianScan?: { hasReservation: boolean, alreadyScanned: boolean, error?: string | null, user?: { name: string, phone: string } | null } | null };

export type PageGateGuardian_EventListQueryVariables = Exact<{ [key: string]: never; }>;


export type PageGateGuardian_EventListQuery = { calendar: Array<{ uid: string, title?: string | null, text?: string | null, type?: string | null }> };

export type PageLiveVoteSeason_DataQueryVariables = Exact<{
  uid: Scalars['String']['input'];
}>;


export type PageLiveVoteSeason_DataQuery = { season?: { uid: string, name: string, startsAt: string | Date, endsAt: string | Date, applicationsFrom: string | Date, applicationsUntil: string | Date, applicationsEditableFrom: string | Date, applicationsEditableUntil: string | Date, showParticipantsFrom: string | Date, showParticipantsUntil: string | Date, showPartnersFrom: string | Date, showPartnersUntil: string | Date, showSponsorsFrom: string | Date, showSponsorsUntil: string | Date, eventFrom: string | Date, eventUntil: string | Date, feedbackFrom: string | Date, feedbackUntil: string | Date, scheduleFrom: string | Date, scheduleUntil: string | Date } | null };

export type PageLiveVoteSeasonIndex_DataQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type PageLiveVoteSeasonIndex_DataQuery = { myLiveVote?: { option: string } | null, myLiveVoteComments: Array<{ id: number, comment: string }> };

export type PageLiveVoteSeasonIndex_DeleteCommentMutationVariables = Exact<{
  commentId: Scalars['Int']['input'];
}>;


export type PageLiveVoteSeasonIndex_DeleteCommentMutation = { deleteLiveVoteComment: boolean };

export type PageLiveVoteSeasonIndex_SubmitCommentMutationVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  comment: Scalars['String']['input'];
}>;


export type PageLiveVoteSeasonIndex_SubmitCommentMutation = { createLiveVoteComment?: { id: number, comment: string } | null };

export type PageLiveVoteSeasonIndex_SubmitVoteMutationVariables = Exact<{
  seasonUid: Scalars['String']['input'];
  vote: Scalars['String']['input'];
}>;


export type PageLiveVoteSeasonIndex_SubmitVoteMutation = { createLiveVote?: { option: string } | null };

export type PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResultsQueryVariables = Exact<{
  seasonUid: Scalars['String']['input'];
}>;


export type PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResultsQuery = { liveVoteResults: Array<{ option: string, voteCount: number }> };

export type PageParticipants_BaseQueryVariables = Exact<{ [key: string]: never; }>;


export type PageParticipants_BaseQuery = { participants: Array<{ uid: string, website: string, brandName: string, descriptionEn: string, descriptionHr: string, logoHidden: boolean, rasterLogo?: { thumbUrl: string, fullUrl: string } | null, ratings: Array<{ averageRating: number, ratingCount?: number | null, component: string }> }> };

export type PageParticipants_RatingsQueryVariables = Exact<{ [key: string]: never; }>;


export type PageParticipants_RatingsQuery = { participants: Array<{ uid: string, brandName: string, ratings: Array<{ averageRating: number, ratingCount?: number | null, component: string }> }> };

export type PageProfileMeCompanyScanUserQrScanMutationVariables = Exact<{
  userUid: Scalars['String']['input'];
}>;


export type PageProfileMeCompanyScanUserQrScanMutation = { scanUserQr?: { isStarred?: boolean | null, alreadyScanned: boolean, note?: string | null, error?: string | null, user?: { uid: string, name: string, email: string, resume?: { cv?: { url: string } | null, faculty?: { name: string } | null, studyYears: Array<{ studyYear: number, studyType: string }> } | null } | null } | null };

export type PageProfileMeCompanyScanUserQrRefineQrScanMutationVariables = Exact<{
  userUid: Scalars['String']['input'];
  refineData: CompanyScanUserQrRefineData;
}>;


export type PageProfileMeCompanyScanUserQrRefineQrScanMutation = { scanUserQrRefine?: { isStarred?: boolean | null, note?: string | null, error?: string | null, user?: { uid: string, name: string, email: string, resume?: { cv?: { url: string } | null, faculty?: { name: string } | null, studyYears: Array<{ studyYear: number, studyType: string }> } | null } | null } | null };

export type PageProfileMeCompanyScansListDataQueryVariables = Exact<{
  companyUid?: InputMaybe<Scalars['String']['input']>;
  seasonUid?: InputMaybe<Scalars['String']['input']>;
}>;


export type PageProfileMeCompanyScansListDataQuery = { scannedUsers: Array<{ note?: string | null, isStarred: boolean, scannedAt: string | Date, user?: { uid: string, name: string, email: string, phone: string } | null }> };

export type PageProfileMeCompanyScansListRefineQrScanMutationVariables = Exact<{
  userUid: Scalars['String']['input'];
  refineData: CompanyScanUserQrRefineData;
}>;


export type PageProfileMeCompanyScansListRefineQrScanMutation = { scanUserQrRefine?: { isStarred?: boolean | null, note?: string | null, error?: string | null, user?: { uid: string, name: string, email: string, phone: string } | null } | null };

export type PageProfileMeCompanySignup_DataQueryVariables = Exact<{ [key: string]: never; }>;


export type PageProfileMeCompanySignup_DataQuery = { talkCategories: Array<{ name: string }>, booths: Array<{ name: string, key?: string | null }>, companyApplication?: { booth?: string | null, wantsPanel: boolean, wantsCocktail: boolean, contactPerson?: { name: string, email: string, phone: string } | null, talk?: { titleEn: string, titleHr: string, descriptionEn: string, descriptionHr: string, language: string, category: { name: string }, presenters: Array<{ firstName: string, lastName: string, bioHr: string, bioEn: string, photo?: { name: string, uid: string, full: { mimeType: string } } | null }> } | null, workshop?: { titleEn: string, titleHr: string, descriptionEn: string, descriptionHr: string, language: string, goal: string, notesEn: string, notesHr: string, presenters: Array<{ firstName: string, lastName: string, bioHr: string, bioEn: string, photo?: { name: string, uid: string, full: { mimeType: string } } | null }> } | null } | null };

export type PageProfileMeCompanySignup_CreateApplicationMutationVariables = Exact<{
  info: CompanyApplicationCreateInput;
}>;


export type PageProfileMeCompanySignup_CreateApplicationMutation = { createCompanyApplication?: { entity?: { wantsCocktail: boolean, wantsPanel: boolean, talk?: { uid: string } | null, workshop?: { uid: string } | null } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type StoreCalendarEventToggleReservationMutationVariables = Exact<{
  input: EventReservationUpdateInput;
}>;


export type StoreCalendarEventToggleReservationMutation = { updateEventReservation?: { entity?: { status: number } | null, errors?: Array<{ field: string, message: string }> | null } | null };

export type StoreCalendarEventsAllCalendarFragmentFragment = { uid: string, location?: string | null, start: string | Date, end: string | Date, capacity: number, forWorkshop?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, reservation: number } | null, forTalk?: { uid: string, titleHr: string, titleEn: string, descriptionHr: string, descriptionEn: string, reservation: number } | null, forPanel?: { uid: string, name: string, description: string, reservation: number, companies: Array<{ uid: string, brandName: string }> } | null, companies?: Array<{ uid: string, brandName: string, rasterLogo?: { fullUrl: string, thumbUrl: string } | null }> | null } & { ' $fragmentName'?: 'StoreCalendarEventsAllCalendarFragmentFragment' };

export type StoreCalendarEventsAllQueryVariables = Exact<{ [key: string]: never; }>;


export type StoreCalendarEventsAllQuery = { calendar: Array<{ ' $fragmentRefs'?: { 'StoreCalendarEventsAllCalendarFragmentFragment': StoreCalendarEventsAllCalendarFragmentFragment } }>, currentSeason?: { reservations: Array<{ uid: string, type: string, count: number }> } | null };

export type ResumeSetIsFavouriteMutationVariables = Exact<{
  uid: Scalars['String']['input'];
  isFavourite: Scalars['Boolean']['input'];
}>;


export type ResumeSetIsFavouriteMutation = { resumeSetIsFavourite: boolean };

export const Frag_SeasonFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Season"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Season"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackFrom"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackUntil"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleFrom"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleUntil"}}]}}]} as unknown as DocumentNode<Frag_SeasonFragment, unknown>;
export const Frag_UserProfileFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<Frag_UserProfileFragment, unknown>;
export const Frag_ApplicationPresenterFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_ApplicationPresenter"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationPresenter"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]} as unknown as DocumentNode<Frag_ApplicationPresenterFragment, unknown>;
export const Frag_InternshipFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]} as unknown as DocumentNode<Frag_InternshipFragment, unknown>;
export const Frag_AllFeedbackFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_AllFeedback"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationFeedback"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applicationComments"}},{"kind":"Field","name":{"kind":"Name","value":"applicationRating"}},{"kind":"Field","name":{"kind":"Name","value":"attendanceRating"}},{"kind":"Field","name":{"kind":"Name","value":"dateComments"}},{"kind":"Field","name":{"kind":"Name","value":"dateRating"}},{"kind":"Field","name":{"kind":"Name","value":"experienceComments"}},{"kind":"Field","name":{"kind":"Name","value":"foodRating"}},{"kind":"Field","name":{"kind":"Name","value":"mostLiked"}},{"kind":"Field","name":{"kind":"Name","value":"onsiteRating"}},{"kind":"Field","name":{"kind":"Name","value":"overallComment"}},{"kind":"Field","name":{"kind":"Name","value":"overallRating"}},{"kind":"Field","name":{"kind":"Name","value":"recommended"}},{"kind":"Field","name":{"kind":"Name","value":"testimonial"}},{"kind":"Field","name":{"kind":"Name","value":"timeRating"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<Frag_AllFeedbackFragment, unknown>;
export const Frag_CompanyApplicationFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_CompanyApplication"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplication"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"goal"}},{"kind":"Field","name":{"kind":"Name","value":"notesEn"}},{"kind":"Field","name":{"kind":"Name","value":"notesHr"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"internship"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Internship"}}]}},{"kind":"Field","name":{"kind":"Name","value":"panelParticipants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cocktail"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"booth"}}]}},{"kind":"Field","name":{"kind":"Name","value":"feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_AllFeedback"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_ApplicationPresenter"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationPresenter"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_AllFeedback"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationFeedback"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applicationComments"}},{"kind":"Field","name":{"kind":"Name","value":"applicationRating"}},{"kind":"Field","name":{"kind":"Name","value":"attendanceRating"}},{"kind":"Field","name":{"kind":"Name","value":"dateComments"}},{"kind":"Field","name":{"kind":"Name","value":"dateRating"}},{"kind":"Field","name":{"kind":"Name","value":"experienceComments"}},{"kind":"Field","name":{"kind":"Name","value":"foodRating"}},{"kind":"Field","name":{"kind":"Name","value":"mostLiked"}},{"kind":"Field","name":{"kind":"Name","value":"onsiteRating"}},{"kind":"Field","name":{"kind":"Name","value":"overallComment"}},{"kind":"Field","name":{"kind":"Name","value":"overallRating"}},{"kind":"Field","name":{"kind":"Name","value":"recommended"}},{"kind":"Field","name":{"kind":"Name","value":"testimonial"}},{"kind":"Field","name":{"kind":"Name","value":"timeRating"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<Frag_CompanyApplicationFragment, unknown>;
export const Frag_CompanyFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Company"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Company"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<Frag_CompanyFragment, unknown>;
export const Frag_NewsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<Frag_NewsFragment, unknown>;
export const Frag_GalleryImageFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<Frag_GalleryImageFragment, unknown>;
export const StoreCalendarEventsAllCalendarFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"StoreCalendarEventsAllCalendarFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CalendarItem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"capacity"}},{"kind":"Field","name":{"kind":"Name","value":"forWorkshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forTalk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forPanel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]} as unknown as DocumentNode<StoreCalendarEventsAllCalendarFragmentFragment, unknown>;
export const ComponentAdminSeasonRatingsCompaniesCompanyComments_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ComponentAdminSeasonRatingsCompaniesCompanyComments_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"companyComponentAverageRatings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"companyUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"component"}},{"kind":"Field","name":{"kind":"Name","value":"averageRating"}},{"kind":"Field","name":{"kind":"Name","value":"comments"}}]}}]}}]} as unknown as DocumentNode<ComponentAdminSeasonRatingsCompaniesCompanyComments_DataQuery, ComponentAdminSeasonRatingsCompaniesCompanyComments_DataQueryVariables>;
export const LoginDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Login"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"identifier"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"login"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}},{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"Variable","name":{"kind":"Name","value":"identifier"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<LoginMutation, LoginMutationVariables>;
export const RegisterDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Register"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserRegisterInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"register"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<RegisterMutation, RegisterMutationVariables>;
export const LogoutDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Logout"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"logout"}}]}}]} as unknown as DocumentNode<LogoutMutation, LogoutMutationVariables>;
export const RequestPasswordResetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RequestPasswordReset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"identifier"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"requestPasswordReset"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"Variable","name":{"kind":"Name","value":"identifier"}}}]}]}}]} as unknown as DocumentNode<RequestPasswordResetMutation, RequestPasswordResetMutationVariables>;
export const CheckPasswordResetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CheckPasswordReset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"token"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"checkPasswordReset"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"token"},"value":{"kind":"Variable","name":{"kind":"Name","value":"token"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]}}]} as unknown as DocumentNode<CheckPasswordResetMutation, CheckPasswordResetMutationVariables>;
export const UsePasswordResetDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UsePasswordReset"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PasswordResetUseInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"usePasswordReset"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"}}]}}]}}]} as unknown as DocumentNode<UsePasswordResetMutation, UsePasswordResetMutationVariables>;
export const RequestPasswordResetForDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RequestPasswordResetFor"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"requestPasswordResetFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}]}]}}]} as unknown as DocumentNode<RequestPasswordResetForMutation, RequestPasswordResetForMutationVariables>;
export const UpdateTranslationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateTranslation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"data"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TranslationCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateTranslation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"data"},"value":{"kind":"Variable","name":{"kind":"Name","value":"data"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}},{"kind":"Field","name":{"kind":"Name","value":"language"}}]}}]}}]} as unknown as DocumentNode<UpdateTranslationMutation, UpdateTranslationMutationVariables>;
export const UpdateProfileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateProfile"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateProfile"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateProfileMutation, UpdateProfileMutationVariables>;
export const UpdateUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserUpdateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateUserMutation, UpdateUserMutationVariables>;
export const UpdatePasswordDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdatePassword"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"currentPassword"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newPassword"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newPasswordRepeat"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updatePassword"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currentPassword"},"value":{"kind":"Variable","name":{"kind":"Name","value":"currentPassword"}}},{"kind":"Argument","name":{"kind":"Name","value":"newPassword"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newPassword"}}},{"kind":"Argument","name":{"kind":"Name","value":"newPasswordRepeat"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newPasswordRepeat"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<UpdatePasswordMutation, UpdatePasswordMutationVariables>;
export const ValidateVatDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ValidateVat"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"vat"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"validateVat"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"vat"},"value":{"kind":"Variable","name":{"kind":"Name","value":"vat"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valid"}},{"kind":"Field","name":{"kind":"Name","value":"exists"}},{"kind":"Field","name":{"kind":"Name","value":"info"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}}]}}]}}]}}]} as unknown as DocumentNode<ValidateVatMutation, ValidateVatMutationVariables>;
export const CreateIndustryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateIndustry"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createIndustry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CreateIndustryMutation, CreateIndustryMutationVariables>;
export const RenameIndustryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RenameIndustry"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"renameIndustry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"oldName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}}},{"kind":"Argument","name":{"kind":"Name","value":"newName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<RenameIndustryMutation, RenameIndustryMutationVariables>;
export const CreateTalkCategoryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateTalkCategory"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createTalkCategory"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CreateTalkCategoryMutation, CreateTalkCategoryMutationVariables>;
export const RenameTalkCategoryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RenameTalkCategory"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"renameTalkCategory"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"oldName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}}},{"kind":"Argument","name":{"kind":"Name","value":"newName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newName"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<RenameTalkCategoryMutation, RenameTalkCategoryMutationVariables>;
export const CreateCocktailTypeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateCocktailType"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createCocktailType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<CreateCocktailTypeMutation, CreateCocktailTypeMutationVariables>;
export const RenameCocktailTypeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RenameCocktailType"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"oldCocktailType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newCocktailType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"renameCocktailType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"oldCocktailType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"oldCocktailType"}}},{"kind":"Argument","name":{"kind":"Name","value":"newCocktailType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newCocktailType"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<RenameCocktailTypeMutation, RenameCocktailTypeMutationVariables>;
export const RegisterCompanyDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RegisterCompany"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateCompanyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"registerCompany"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"field"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<RegisterCompanyMutation, RegisterCompanyMutationVariables>;
export const UpdateCompanyInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateCompanyInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateCompanyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateCompanyInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"field"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<UpdateCompanyInfoMutation, UpdateCompanyInfoMutationVariables>;
export const CreatePressReleaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreatePressRelease"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PressReleaseWithFilesCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createPressRelease"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"published"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<CreatePressReleaseMutation, CreatePressReleaseMutationVariables>;
export const UpdatePressReleaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdatePressRelease"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PressReleaseWithFilesCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updatePressRelease"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"published"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<UpdatePressReleaseMutation, UpdatePressReleaseMutationVariables>;
export const EditApprovedCompanyApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditApprovedCompanyApplication"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationApprovedEditInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editApprovedCompanyApplication"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<EditApprovedCompanyApplicationMutation, EditApprovedCompanyApplicationMutationVariables>;
export const UpdateResumeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateResume"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ResumeCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateResume"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateResumeMutation, UpdateResumeMutationVariables>;
export const CreateNewsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateNews"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"NewsCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createNews"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]} as unknown as DocumentNode<CreateNewsMutation, CreateNewsMutationVariables>;
export const EditNewsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditNews"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"NewsCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editNews"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<EditNewsMutation, EditNewsMutationVariables>;
export const DeleteNewsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteNews"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteNews"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}]}]}}]} as unknown as DocumentNode<DeleteNewsMutation, DeleteNewsMutationVariables>;
export const CreateGalleryImageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateGalleryImage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImageCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createGalleryImage"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}}]}}]} as unknown as DocumentNode<CreateGalleryImageMutation, CreateGalleryImageMutationVariables>;
export const EditGalleryImageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditGalleryImage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImageCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editGalleryImage"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_GalleryImage"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<EditGalleryImageMutation, EditGalleryImageMutationVariables>;
export const DeleteGalleryImageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteGalleryImage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteGalleryImage"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}]}]}}]} as unknown as DocumentNode<DeleteGalleryImageMutation, DeleteGalleryImageMutationVariables>;
export const ProfileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<ProfileQuery, ProfileQueryVariables>;
export const TranslationsForDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TranslationsFor"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"language"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allTranslationsFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"language"},"value":{"kind":"Variable","name":{"kind":"Name","value":"language"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<TranslationsForQuery, TranslationsForQueryVariables>;
export const InitialDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InitialData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"language"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_UserProfile"}}]}},{"kind":"Field","name":{"kind":"Name","value":"allTranslationsFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"language"},"value":{"kind":"Variable","name":{"kind":"Name","value":"language"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Season"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Season"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Season"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackFrom"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackUntil"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleFrom"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleUntil"}}]}}]} as unknown as DocumentNode<InitialDataQuery, InitialDataQueryVariables>;
export const PageIndexDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageIndexData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"language"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sponsors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"partners"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"news"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"lang"},"value":{"kind":"Variable","name":{"kind":"Name","value":"language"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"take"},"value":{"kind":"IntValue","value":"3"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}},{"kind":"Field","name":{"kind":"Name","value":"galleryImages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"take"},"value":{"kind":"IntValue","value":"6"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_GalleryImage"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<PageIndexDataQuery, PageIndexDataQueryVariables>;
export const CompanyDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Company"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"vat"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"company"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"vat"},"value":{"kind":"Variable","name":{"kind":"Name","value":"vat"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Company"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Company"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Company"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CompanyQuery, CompanyQueryVariables>;
export const CompanyInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CompanyInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"companyInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"program"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"notesHr"}},{"kind":"Field","name":{"kind":"Name","value":"notesEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"panelParticipants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"panel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"internship"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Internship"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]} as unknown as DocumentNode<CompanyInfoQuery, CompanyInfoQueryVariables>;
export const IndustriesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Industries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"industries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<IndustriesQuery, IndustriesQueryVariables>;
export const TalkCategoriesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TalkCategories"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talkCategories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<TalkCategoriesQuery, TalkCategoriesQueryVariables>;
export const CocktailTypesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CocktailTypes"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cocktailTypes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<CocktailTypesQuery, CocktailTypesQueryVariables>;
export const AvailableCocktailTypesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AvailableCocktailTypes"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availableCocktailTypes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<AvailableCocktailTypesQuery, AvailableCocktailTypesQueryVariables>;
export const PressReleaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PressRelease"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pressRelease"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"published"}},{"kind":"Field","name":{"kind":"Name","value":"file"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mimeType"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<PressReleaseQuery, PressReleaseQueryVariables>;
export const PressReleasesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PressReleases"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pressReleases"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"published"},"value":{"kind":"EnumValue","value":"desc"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"published"}},{"kind":"Field","name":{"kind":"Name","value":"file"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<PressReleasesQuery, PressReleasesQueryVariables>;
export const AllNewsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllNews"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"NewsFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allNews"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<AllNewsQuery, AllNewsQueryVariables>;
export const NewsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"News"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"lang"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"NewsFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"news"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"lang"},"value":{"kind":"Variable","name":{"kind":"Name","value":"lang"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<NewsQuery, NewsQueryVariables>;
export const NewsItemDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"NewsItem"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"slug"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"lang"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"NewsFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"newsItem"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"slug"},"value":{"kind":"Variable","name":{"kind":"Name","value":"slug"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}},{"kind":"Field","name":{"kind":"Name","value":"news"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"lang"},"value":{"kind":"Variable","name":{"kind":"Name","value":"lang"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<NewsItemQuery, NewsItemQueryVariables>;
export const NewsItemByUidDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"NewsItemByUid"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"newsItemByUid"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_News"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_News"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"News"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lang"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"content"}}]}}]} as unknown as DocumentNode<NewsItemByUidQuery, NewsItemByUidQueryVariables>;
export const GalleryImagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GalleryImages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImageFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleryImages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_GalleryImage"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<GalleryImagesQuery, GalleryImagesQueryVariables>;
export const AllGalleryImagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllGalleryImages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allGalleryImages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_GalleryImage"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<AllGalleryImagesQuery, AllGalleryImagesQueryVariables>;
export const InternshipsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Internships"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internships"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Internship"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]} as unknown as DocumentNode<InternshipsQuery, InternshipsQueryVariables>;
export const GalleryImagItemByUidDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GalleryImagItemByUid"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleryImageItemByUid"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_GalleryImage"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_GalleryImage"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GalleryImage"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"order"}},{"kind":"Field","name":{"kind":"Name","value":"visible"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}}]}}]} as unknown as DocumentNode<GalleryImagItemByUidQuery, GalleryImagItemByUidQueryVariables>;
export const AdminInitialDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminInitialData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"industries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"seasons"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"endsAt"},"value":{"kind":"EnumValue","value":"desc"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Season"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Season"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Season"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackFrom"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackUntil"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleFrom"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleUntil"}}]}}]} as unknown as DocumentNode<AdminInitialDataQuery, AdminInitialDataQueryVariables>;
export const AdminCompanyApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminCompanyApplication"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"company"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talkCategories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"booths"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"key"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyApplicationFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"company"},"value":{"kind":"Variable","name":{"kind":"Name","value":"company"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_CompanyApplication"}},{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Company"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_ApplicationPresenter"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationPresenter"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_AllFeedback"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationFeedback"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applicationComments"}},{"kind":"Field","name":{"kind":"Name","value":"applicationRating"}},{"kind":"Field","name":{"kind":"Name","value":"attendanceRating"}},{"kind":"Field","name":{"kind":"Name","value":"dateComments"}},{"kind":"Field","name":{"kind":"Name","value":"dateRating"}},{"kind":"Field","name":{"kind":"Name","value":"experienceComments"}},{"kind":"Field","name":{"kind":"Name","value":"foodRating"}},{"kind":"Field","name":{"kind":"Name","value":"mostLiked"}},{"kind":"Field","name":{"kind":"Name","value":"onsiteRating"}},{"kind":"Field","name":{"kind":"Name","value":"overallComment"}},{"kind":"Field","name":{"kind":"Name","value":"overallRating"}},{"kind":"Field","name":{"kind":"Name","value":"recommended"}},{"kind":"Field","name":{"kind":"Name","value":"testimonial"}},{"kind":"Field","name":{"kind":"Name","value":"timeRating"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_CompanyApplication"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplication"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"goal"}},{"kind":"Field","name":{"kind":"Name","value":"notesEn"}},{"kind":"Field","name":{"kind":"Name","value":"notesHr"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"internship"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Internship"}}]}},{"kind":"Field","name":{"kind":"Name","value":"panelParticipants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cocktail"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"booth"}}]}},{"kind":"Field","name":{"kind":"Name","value":"feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_AllFeedback"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Company"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Company"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"instagram"}},{"kind":"Field","name":{"kind":"Name","value":"facebook"}},{"kind":"Field","name":{"kind":"Name","value":"linkedIn"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<AdminCompanyApplicationQuery, AdminCompanyApplicationQueryVariables>;
export const AdminCompanyApplicationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminCompanyApplications"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"industries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talkCategories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forSeason"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"is"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"uid"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equals"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"booths"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyApplications"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"industry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"forSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}}]}}]} as unknown as DocumentNode<AdminCompanyApplicationsQuery, AdminCompanyApplicationsQueryVariables>;
export const CurrentCompanyApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CurrentCompanyApplication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talkCategories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"availableCocktailTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}},{"kind":"Field","name":{"kind":"Name","value":"booths"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"key"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyApplication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_CompanyApplication"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_ApplicationPresenter"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationPresenter"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Internship"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ApplicationInternship"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"competencies"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodStart"}},{"kind":"Field","name":{"kind":"Name","value":"workingPeriodEnd"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"duration"}},{"kind":"Field","name":{"kind":"Name","value":"company"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_AllFeedback"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationFeedback"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applicationComments"}},{"kind":"Field","name":{"kind":"Name","value":"applicationRating"}},{"kind":"Field","name":{"kind":"Name","value":"attendanceRating"}},{"kind":"Field","name":{"kind":"Name","value":"dateComments"}},{"kind":"Field","name":{"kind":"Name","value":"dateRating"}},{"kind":"Field","name":{"kind":"Name","value":"experienceComments"}},{"kind":"Field","name":{"kind":"Name","value":"foodRating"}},{"kind":"Field","name":{"kind":"Name","value":"mostLiked"}},{"kind":"Field","name":{"kind":"Name","value":"onsiteRating"}},{"kind":"Field","name":{"kind":"Name","value":"overallComment"}},{"kind":"Field","name":{"kind":"Name","value":"overallRating"}},{"kind":"Field","name":{"kind":"Name","value":"recommended"}},{"kind":"Field","name":{"kind":"Name","value":"testimonial"}},{"kind":"Field","name":{"kind":"Name","value":"timeRating"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_CompanyApplication"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplication"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"goal"}},{"kind":"Field","name":{"kind":"Name","value":"notesEn"}},{"kind":"Field","name":{"kind":"Name","value":"notesHr"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"internship"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Internship"}}]}},{"kind":"Field","name":{"kind":"Name","value":"panelParticipants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_ApplicationPresenter"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cocktail"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"booth"}}]}},{"kind":"Field","name":{"kind":"Name","value":"feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_AllFeedback"}}]}}]}}]} as unknown as DocumentNode<CurrentCompanyApplicationQuery, CurrentCompanyApplicationQueryVariables>;
export const MyResumeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyResume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"cv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}},{"kind":"Field","name":{"kind":"Name","value":"faculty"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"module"}},{"kind":"Field","name":{"kind":"Name","value":"specialization"}}]}},{"kind":"Field","name":{"kind":"Name","value":"interests"}},{"kind":"Field","name":{"kind":"Name","value":"technologies"}},{"kind":"Field","name":{"kind":"Name","value":"projects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"project"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"volunteerExperiences"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"organisation"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workExperiences"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"company"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"studyYears"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"studyType"}},{"kind":"Field","name":{"kind":"Name","value":"studyYear"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraField"}}]}}]}}]}}]} as unknown as DocumentNode<MyResumeQuery, MyResumeQueryVariables>;
export const ResumeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Resume"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resume"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"faculty"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"module"}}]}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"studyYears"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"studyYear"}},{"kind":"Field","name":{"kind":"Name","value":"studyType"}}]}},{"kind":"Field","name":{"kind":"Name","value":"projects"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"project"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"technologies"}},{"kind":"Field","name":{"kind":"Name","value":"interests"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"cv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"volunteerExperiences"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"organisation"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workExperiences"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"company"}},{"kind":"Field","name":{"kind":"Name","value":"position"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"until"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraField"}}]}},{"kind":"Field","name":{"kind":"Name","value":"resumeIsFavourite"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}]}]}}]} as unknown as DocumentNode<ResumeQuery, ResumeQueryVariables>;
export const ProfileBaseDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProfileBaseData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booths"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyApplication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"}}]}},{"kind":"Field","name":{"kind":"Name","value":"userApplications"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workshop"}},{"kind":"Field","name":{"kind":"Name","value":"talk"}}]}},{"kind":"Field","name":{"kind":"Name","value":"internship"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"position"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"calendar"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"forWorkshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forTalk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forPanel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_Season"}},{"kind":"Field","name":{"kind":"Name","value":"companyComponentAverageRatings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"component"}},{"kind":"Field","name":{"kind":"Name","value":"averageRating"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_Season"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Season"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackFrom"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackUntil"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleFrom"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleUntil"}}]}}]} as unknown as DocumentNode<ProfileBaseDataQuery, ProfileBaseDataQueryVariables>;
export const AdminFeedbackInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminFeedbackInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"companyApplications"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"forCompany"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"brandName"},"value":{"kind":"EnumValue","value":"desc"}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"feedback"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"frag_AllFeedback"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"frag_AllFeedback"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationFeedback"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applicationComments"}},{"kind":"Field","name":{"kind":"Name","value":"applicationRating"}},{"kind":"Field","name":{"kind":"Name","value":"attendanceRating"}},{"kind":"Field","name":{"kind":"Name","value":"dateComments"}},{"kind":"Field","name":{"kind":"Name","value":"dateRating"}},{"kind":"Field","name":{"kind":"Name","value":"experienceComments"}},{"kind":"Field","name":{"kind":"Name","value":"foodRating"}},{"kind":"Field","name":{"kind":"Name","value":"mostLiked"}},{"kind":"Field","name":{"kind":"Name","value":"onsiteRating"}},{"kind":"Field","name":{"kind":"Name","value":"overallComment"}},{"kind":"Field","name":{"kind":"Name","value":"overallRating"}},{"kind":"Field","name":{"kind":"Name","value":"recommended"}},{"kind":"Field","name":{"kind":"Name","value":"testimonial"}},{"kind":"Field","name":{"kind":"Name","value":"timeRating"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<AdminFeedbackInfoQuery, AdminFeedbackInfoQueryVariables>;
export const PageAdminSeasonScheduleBaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonScheduleBase"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"participants"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"program"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"grouped"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"grouped"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"panelParticipants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"panel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"grouped"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"calendar"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"grouped"}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonScheduleBaseQuery, PageAdminSeasonScheduleBaseQueryVariables>;
export const AdminReservationsDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminReservationsData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reservations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"participants"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"vat"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"program"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}}]}},{"kind":"Field","name":{"kind":"Name","value":"panel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AdminReservationsDataQuery, AdminReservationsDataQueryVariables>;
export const PageScheduleBaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageScheduleBase"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"calendar"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"grouped"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"hasEvent"}}]}}]}}]} as unknown as DocumentNode<PageScheduleBaseQuery, PageScheduleBaseQueryVariables>;
export const PageAdminUserEditBaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminUserEditBase"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"eventLog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"data"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sessionsFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sessionId"}},{"kind":"Field","name":{"kind":"Name","value":"ip"}},{"kind":"Field","name":{"kind":"Name","value":"userAgent"}},{"kind":"Field","name":{"kind":"Name","value":"loggedInAt"}}]}}]}}]} as unknown as DocumentNode<PageAdminUserEditBaseQuery, PageAdminUserEditBaseQueryVariables>;
export const PageAdminSeasonSeasonDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonSeasonData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonSeasonDataQuery, PageAdminSeasonSeasonDataQueryVariables>;
export const PageAdminSeasonApplicationsCompanyEdit_DeleteApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageAdminSeasonApplicationsCompanyEdit_DeleteApplication"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"company"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteCompanyApplicationFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"company"},"value":{"kind":"Variable","name":{"kind":"Name","value":"company"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}]}]}}]} as unknown as DocumentNode<PageAdminSeasonApplicationsCompanyEdit_DeleteApplicationMutation, PageAdminSeasonApplicationsCompanyEdit_DeleteApplicationMutationVariables>;
export const PageAdminSeasonApplicationsCompanyEdit_UpsertApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageAdminSeasonApplicationsCompanyEdit_UpsertApplication"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"company"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createCompanyApplicationFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"company"},"value":{"kind":"Variable","name":{"kind":"Name","value":"company"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}},{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonApplicationsCompanyEdit_UpsertApplicationMutation, PageAdminSeasonApplicationsCompanyEdit_UpsertApplicationMutationVariables>;
export const PageAdminSeasonApplicationsApproval_BaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonApplicationsApproval_Base"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applications"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"}},{"kind":"Field","name":{"kind":"Name","value":"logoHidden"}}]}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonApplicationsApproval_BaseQuery, PageAdminSeasonApplicationsApproval_BaseQueryVariables>;
export const PageAdminSeasonApplicationsApproval_ApproveCompanyApplicationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageAdminSeasonApplicationsApproval_ApproveCompanyApplications"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companies"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ApproveCompanyApplicationsInput"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"approveCompanyApplications"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"companies"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companies"}}},{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}},{"kind":"Field","name":{"kind":"Name","value":"cocktail"}},{"kind":"Field","name":{"kind":"Name","value":"forApplication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonApplicationsApproval_ApproveCompanyApplicationsMutation, PageAdminSeasonApplicationsApproval_ApproveCompanyApplicationsMutationVariables>;
export const PageAdminSeasonLiveVoteResults_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonLiveVoteResults_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"liveVoteResults"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"option"}},{"kind":"Field","name":{"kind":"Name","value":"voteCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"liveVoteComments"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"forUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonLiveVoteResults_DataQuery, PageAdminSeasonLiveVoteResults_DataQueryVariables>;
export const PageAdminSeasonLiveVoteResults_DeleteCommentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageAdminSeasonLiveVoteResults_DeleteComment"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"commentId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteLiveVoteComment"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"commentId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"commentId"}}}]}]}}]} as unknown as DocumentNode<PageAdminSeasonLiveVoteResults_DeleteCommentMutation, PageAdminSeasonLiveVoteResults_DeleteCommentMutationVariables>;
export const PageAdminSeasonRatingsCompanies_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonRatingsCompanies_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"applications"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"ratings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"averageRating"}},{"kind":"Field","name":{"kind":"Name","value":"component"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonRatingsCompanies_DataQuery, PageAdminSeasonRatingsCompanies_DataQueryVariables>;
export const PageAdminSeasonRatingsQrCodesDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonRatingsQrCodesData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applications"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forCompany"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"legalName"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approval"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"talkParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"workshopParticipants"}},{"kind":"Field","name":{"kind":"Name","value":"panel"}}]}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonRatingsQrCodesDataQuery, PageAdminSeasonRatingsQrCodesDataQueryVariables>;
export const PageAdminSeasonReservationsScannedDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminSeasonReservationsScannedData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"season"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gateGuardianScanList"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"season"},"value":{"kind":"Variable","name":{"kind":"Name","value":"season"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"eventId"}},{"kind":"Field","name":{"kind":"Name","value":"forUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"scannedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forCalendarItem"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forTalk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forWorkshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forPanel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"scannedAt"}}]}}]}}]} as unknown as DocumentNode<PageAdminSeasonReservationsScannedDataQuery, PageAdminSeasonReservationsScannedDataQueryVariables>;
export const PageAdminUsersScannersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageAdminUsersScanners"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"users"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<PageAdminUsersScannersQuery, PageAdminUsersScannersQueryVariables>;
export const PageAdminUsersScannersUpdateIsScannerDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageAdminUsersScannersUpdateIsScanner"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isScanner"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateScannerStatusFor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"isScanner"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isScanner"}}}]}]}}]} as unknown as DocumentNode<PageAdminUsersScannersUpdateIsScannerMutation, PageAdminUsersScannersUpdateIsScannerMutationVariables>;
export const PageCalendarEventDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageCalendarEventData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"calendarItem"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasEvent"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}},{"kind":"Field","name":{"kind":"Name","value":"calendarItemCompanyUid"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}]}]}}]} as unknown as DocumentNode<PageCalendarEventDataQuery, PageCalendarEventDataQueryVariables>;
export const PageCompanyUidRate_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageCompanyUidRate_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"component"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userCompanyComponentRating"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"companyUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"component"},"value":{"kind":"Variable","name":{"kind":"Name","value":"component"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}}]}}]}}]} as unknown as DocumentNode<PageCompanyUidRate_DataQuery, PageCompanyUidRate_DataQueryVariables>;
export const PageCompanyUidRate_UpsertDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageCompanyUidRate_Upsert"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"component"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"rating"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"comment"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertUserCompanyComponentRating"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"companyUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"component"},"value":{"kind":"Variable","name":{"kind":"Name","value":"component"}}},{"kind":"Argument","name":{"kind":"Name","value":"rating"},"value":{"kind":"Variable","name":{"kind":"Name","value":"rating"}}},{"kind":"Argument","name":{"kind":"Name","value":"comment"},"value":{"kind":"Variable","name":{"kind":"Name","value":"comment"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}}]}}]}}]} as unknown as DocumentNode<PageCompanyUidRate_UpsertMutation, PageCompanyUidRate_UpsertMutationVariables>;
export const PageCompanyUidRate_DeleteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageCompanyUidRate_Delete"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"component"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteUserCompanyComponentRating"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"companyUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"component"},"value":{"kind":"Variable","name":{"kind":"Name","value":"component"}}}]}]}}]} as unknown as DocumentNode<PageCompanyUidRate_DeleteMutation, PageCompanyUidRate_DeleteMutationVariables>;
export const PageGateGuardian_ScanDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageGateGuardian_Scan"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eventUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eventType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gateGuardianScan"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"eventUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eventUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"eventType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eventType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasReservation"}},{"kind":"Field","name":{"kind":"Name","value":"alreadyScanned"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]} as unknown as DocumentNode<PageGateGuardian_ScanMutation, PageGateGuardian_ScanMutationVariables>;
export const PageGateGuardian_EventListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageGateGuardian_EventList"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"calendar"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<PageGateGuardian_EventListQuery, PageGateGuardian_EventListQueryVariables>;
export const PageLiveVoteSeason_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageLiveVoteSeason_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"season"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableFrom"}},{"kind":"Field","name":{"kind":"Name","value":"applicationsEditableUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showParticipantsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showPartnersUntil"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsFrom"}},{"kind":"Field","name":{"kind":"Name","value":"showSponsorsUntil"}},{"kind":"Field","name":{"kind":"Name","value":"eventFrom"}},{"kind":"Field","name":{"kind":"Name","value":"eventUntil"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackFrom"}},{"kind":"Field","name":{"kind":"Name","value":"feedbackUntil"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleFrom"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleUntil"}}]}}]}}]} as unknown as DocumentNode<PageLiveVoteSeason_DataQuery, PageLiveVoteSeason_DataQueryVariables>;
export const PageLiveVoteSeasonIndex_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageLiveVoteSeasonIndex_Data"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myLiveVote"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"option"}}]}},{"kind":"Field","name":{"kind":"Name","value":"myLiveVoteComments"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}}]}}]}}]} as unknown as DocumentNode<PageLiveVoteSeasonIndex_DataQuery, PageLiveVoteSeasonIndex_DataQueryVariables>;
export const PageLiveVoteSeasonIndex_DeleteCommentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageLiveVoteSeasonIndex_DeleteComment"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"commentId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteLiveVoteComment"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"commentId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"commentId"}}}]}]}}]} as unknown as DocumentNode<PageLiveVoteSeasonIndex_DeleteCommentMutation, PageLiveVoteSeasonIndex_DeleteCommentMutationVariables>;
export const PageLiveVoteSeasonIndex_SubmitCommentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageLiveVoteSeasonIndex_SubmitComment"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"comment"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createLiveVoteComment"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"comment"},"value":{"kind":"Variable","name":{"kind":"Name","value":"comment"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}}]}}]}}]} as unknown as DocumentNode<PageLiveVoteSeasonIndex_SubmitCommentMutation, PageLiveVoteSeasonIndex_SubmitCommentMutationVariables>;
export const PageLiveVoteSeasonIndex_SubmitVoteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageLiveVoteSeasonIndex_SubmitVote"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"vote"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createLiveVote"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"vote"},"value":{"kind":"Variable","name":{"kind":"Name","value":"vote"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"option"}}]}}]}}]} as unknown as DocumentNode<PageLiveVoteSeasonIndex_SubmitVoteMutation, PageLiveVoteSeasonIndex_SubmitVoteMutationVariables>;
export const PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResultsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResults"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"liveVoteResults"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"option"}},{"kind":"Field","name":{"kind":"Name","value":"voteCount"}}]}}]}}]} as unknown as DocumentNode<PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResultsQuery, PageLiveVoteSeasonViewLiveVoteResults_LiveVoteResultsQueryVariables>;
export const PageParticipants_BaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageParticipants_Base"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"participants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"logoHidden"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}},{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ratings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"averageRating"}},{"kind":"Field","name":{"kind":"Name","value":"ratingCount"}},{"kind":"Field","name":{"kind":"Name","value":"component"}}]}}]}}]}}]} as unknown as DocumentNode<PageParticipants_BaseQuery, PageParticipants_BaseQueryVariables>;
export const PageParticipants_RatingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageParticipants_Ratings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"participants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"ratings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"averageRating"}},{"kind":"Field","name":{"kind":"Name","value":"ratingCount"}},{"kind":"Field","name":{"kind":"Name","value":"component"}}]}}]}}]}}]} as unknown as DocumentNode<PageParticipants_RatingsQuery, PageParticipants_RatingsQueryVariables>;
export const PageProfileMeCompanyScanUserQrScanDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageProfileMeCompanyScanUserQrScan"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scanUserQr"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"resume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"faculty"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"studyYears"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"studyYear"}},{"kind":"Field","name":{"kind":"Name","value":"studyType"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"isStarred"}},{"kind":"Field","name":{"kind":"Name","value":"alreadyScanned"}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanyScanUserQrScanMutation, PageProfileMeCompanyScanUserQrScanMutationVariables>;
export const PageProfileMeCompanyScanUserQrRefineQrScanDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageProfileMeCompanyScanUserQrRefineQrScan"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refineData"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyScanUserQrRefineData"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scanUserQrRefine"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"refineData"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refineData"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"resume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"Field","name":{"kind":"Name","value":"faculty"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"studyYears"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"studyYear"}},{"kind":"Field","name":{"kind":"Name","value":"studyType"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"isStarred"}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanyScanUserQrRefineQrScanMutation, PageProfileMeCompanyScanUserQrRefineQrScanMutationVariables>;
export const PageProfileMeCompanyScansListDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageProfileMeCompanyScansListData"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scannedUsers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"companyUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"companyUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"seasonUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"seasonUid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"isStarred"}},{"kind":"Field","name":{"kind":"Name","value":"scannedAt"}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanyScansListDataQuery, PageProfileMeCompanyScansListDataQueryVariables>;
export const PageProfileMeCompanyScansListRefineQrScanDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageProfileMeCompanyScansListRefineQrScan"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refineData"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyScanUserQrRefineData"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scanUserQrRefine"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userUid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userUid"}}},{"kind":"Argument","name":{"kind":"Name","value":"refineData"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refineData"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isStarred"}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanyScansListRefineQrScanMutation, PageProfileMeCompanyScansListRefineQrScanMutationVariables>;
export const PageProfileMeCompanySignup_DataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PageProfileMeCompanySignup_Data"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talkCategories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"booths"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"key"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyApplication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"booth"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"language"}},{"kind":"Field","name":{"kind":"Name","value":"goal"}},{"kind":"Field","name":{"kind":"Name","value":"notesEn"}},{"kind":"Field","name":{"kind":"Name","value":"notesHr"}},{"kind":"Field","name":{"kind":"Name","value":"presenters"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"bioHr"}},{"kind":"Field","name":{"kind":"Name","value":"bioEn"}},{"kind":"Field","name":{"kind":"Name","value":"photo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"full"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mimeType"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanySignup_DataQuery, PageProfileMeCompanySignup_DataQueryVariables>;
export const PageProfileMeCompanySignup_CreateApplicationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PageProfileMeCompanySignup_CreateApplication"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"info"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CompanyApplicationCreateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createCompanyApplication"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"info"},"value":{"kind":"Variable","name":{"kind":"Name","value":"info"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"talk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}}]}},{"kind":"Field","name":{"kind":"Name","value":"wantsCocktail"}},{"kind":"Field","name":{"kind":"Name","value":"wantsPanel"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<PageProfileMeCompanySignup_CreateApplicationMutation, PageProfileMeCompanySignup_CreateApplicationMutationVariables>;
export const StoreCalendarEventToggleReservationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"StoreCalendarEventToggleReservation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"EventReservationUpdateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateEventReservation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<StoreCalendarEventToggleReservationMutation, StoreCalendarEventToggleReservationMutationVariables>;
export const StoreCalendarEventsAllDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"StoreCalendarEventsAll"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"calendar"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"StoreCalendarEventsAllCalendarFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentSeason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reservations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"StoreCalendarEventsAllCalendarFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CalendarItem"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"location"}},{"kind":"Field","name":{"kind":"Name","value":"start"}},{"kind":"Field","name":{"kind":"Name","value":"end"}},{"kind":"Field","name":{"kind":"Name","value":"capacity"}},{"kind":"Field","name":{"kind":"Name","value":"forWorkshop"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forTalk"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"titleHr"}},{"kind":"Field","name":{"kind":"Name","value":"titleEn"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionHr"}},{"kind":"Field","name":{"kind":"Name","value":"descriptionEn"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"forPanel"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"reservation"}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"companies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uid"}},{"kind":"Field","name":{"kind":"Name","value":"brandName"}},{"kind":"Field","name":{"kind":"Name","value":"rasterLogo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fullUrl"}},{"kind":"Field","name":{"kind":"Name","value":"thumbUrl"}}]}}]}}]}}]} as unknown as DocumentNode<StoreCalendarEventsAllQuery, StoreCalendarEventsAllQueryVariables>;
export const ResumeSetIsFavouriteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ResumeSetIsFavourite"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uid"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isFavourite"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resumeSetIsFavourite"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uid"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uid"}}},{"kind":"Argument","name":{"kind":"Name","value":"isFavourite"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isFavourite"}}}]}]}}]} as unknown as DocumentNode<ResumeSetIsFavouriteMutation, ResumeSetIsFavouriteMutationVariables>;